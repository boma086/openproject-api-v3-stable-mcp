// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf50, _linksSelf50, _linksSelf50Request, _linksSelf50Response } from './_links-self-50';

/**
 * The shape of the model inside the application code - what the users use
 */
export const priorityCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf50,
  });
});

/**
 *
 * @typedef  {PriorityCollectionModelLinks} priorityCollectionModelLinks
 * @property {_LinksSelf50}
 */
export type PriorityCollectionModelLinks = z.infer<typeof priorityCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const priorityCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf50Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const priorityCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf50Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
