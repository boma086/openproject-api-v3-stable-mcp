// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf51, _linksSelf51, _linksSelf51Request, _linksSelf51Response } from './_links-self-51';

/**
 * The shape of the model inside the application code - what the users use
 */
export const priorityModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf51,
  });
});

/**
 * 
 * @typedef  {PriorityModelLinks} priorityModelLinks   
 * @property {_LinksSelf51} - This priority

``Resource``: Priority
 */
export type PriorityModelLinks = z.infer<typeof priorityModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const priorityModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf51Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const priorityModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf51Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
