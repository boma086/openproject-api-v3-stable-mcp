// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  CreateViewsRequestLinks,
  createViewsRequestLinks,
  createViewsRequestLinksRequest,
  createViewsRequestLinksResponse,
} from './create-views-request-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createViewsRequest = z.lazy(() => {
  return z.object({
    _links: createViewsRequestLinks.optional(),
  });
});

/**
 *
 * @typedef  {CreateViewsRequest} createViewsRequest
 * @property {CreateViewsRequestLinks}
 */
export type CreateViewsRequest = z.infer<typeof createViewsRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createViewsRequestResponse = z.lazy(() => {
  return z
    .object({
      _links: createViewsRequestLinksResponse.optional(),
    })
    .transform((data) => ({
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createViewsRequestRequest = z.lazy(() => {
  return z
    .object({
      _links: createViewsRequestLinksRequest.optional(),
    })
    .transform((data) => ({
      _links: data['_links'],
    }));
});
