// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf62, _linksSelf62, _linksSelf62Request, _linksSelf62Response } from './_links-self-62';

/**
 * The shape of the model inside the application code - what the users use
 */
export const elementsLinks7 = z.lazy(() => {
  return z.object({
    self: _linksSelf62,
  });
});

/**
 * 
 * @typedef  {ElementsLinks7} elementsLinks7   
 * @property {_LinksSelf62} - This type

``Resource``: Type
 */
export type ElementsLinks7 = z.infer<typeof elementsLinks7>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks7Response = z.lazy(() => {
  return z
    .object({
      self: _linksSelf62Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks7Request = z.lazy(() => {
  return z
    .object({
      self: _linksSelf62Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
