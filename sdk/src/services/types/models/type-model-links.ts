// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf63, _linksSelf63, _linksSelf63Request, _linksSelf63Response } from './_links-self-63';

/**
 * The shape of the model inside the application code - what the users use
 */
export const typeModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf63,
  });
});

/**
 * 
 * @typedef  {TypeModelLinks} typeModelLinks   
 * @property {_LinksSelf63} - This type

``Resource``: Type
 */
export type TypeModelLinks = z.infer<typeof typeModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const typeModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf63Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const typeModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf63Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
