// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf59, _linksSelf59, _linksSelf59Request, _linksSelf59Response } from './_links-self-59';

/**
 * The shape of the model inside the application code - what the users use
 */
export const fileLinkCollectionReadModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf59.optional(),
  });
});

/**
 * 
 * @typedef  {FileLinkCollectionReadModelLinks} fileLinkCollectionReadModelLinks   
 * @property {_LinksSelf59} - This file links collection

``Resource``: FileLinkCollectionReadModel
 */
export type FileLinkCollectionReadModelLinks = z.infer<typeof fileLinkCollectionReadModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionReadModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf59Response.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionReadModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf59Request.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
