// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf55, _linksSelf55, _linksSelf55Request, _linksSelf55Response } from './_links-self-55';

/**
 * The shape of the model inside the application code - what the users use
 */
export const workPackagesModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf55,
  });
});

/**
 * 
 * @typedef  {WorkPackagesModelLinks} workPackagesModelLinks   
 * @property {_LinksSelf55} - The work package collection

``Resource``: WorkPackageCollection
 */
export type WorkPackagesModelLinks = z.infer<typeof workPackagesModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackagesModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf55Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackagesModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf55Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
