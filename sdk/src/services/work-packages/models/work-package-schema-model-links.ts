// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf56, _linksSelf56, _linksSelf56Request, _linksSelf56Response } from './_links-self-56';

/**
 * The shape of the model inside the application code - what the users use
 */
export const workPackageSchemaModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf56.optional(),
  });
});

/**
 * 
 * @typedef  {WorkPackageSchemaModelLinks} workPackageSchemaModelLinks   
 * @property {_LinksSelf56} - This work package schema

``Resource``: Schema
 */
export type WorkPackageSchemaModelLinks = z.infer<typeof workPackageSchemaModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageSchemaModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf56Response.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageSchemaModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf56Request.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
