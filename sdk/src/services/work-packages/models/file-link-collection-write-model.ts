// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  FileLinkCollectionWriteModelType,
  fileLinkCollectionWriteModelType,
} from './file-link-collection-write-model-type';
import {
  CollectionLinks,
  collectionLinks,
  collectionLinksRequest,
  collectionLinksResponse,
} from '../../common/collection-links';
import {
  FileLinkCollectionWriteModelEmbedded,
  fileLinkCollectionWriteModelEmbedded,
  fileLinkCollectionWriteModelEmbeddedRequest,
  fileLinkCollectionWriteModelEmbeddedResponse,
} from './file-link-collection-write-model-embedded';

/**
 * The shape of the model inside the application code - what the users use
 */
export const fileLinkCollectionWriteModel = z.lazy(() => {
  return z.object({
    _type: fileLinkCollectionWriteModelType,
    total: z.number().gte(0),
    count: z.number().gte(0),
    _links: collectionLinks,
    _embedded: fileLinkCollectionWriteModelEmbedded,
  });
});

/**
 *
 * @typedef  {FileLinkCollectionWriteModel} fileLinkCollectionWriteModel
 * @property {FileLinkCollectionWriteModelType}
 * @property {number} - The total amount of elements available in the collection.
 * @property {number} - Actual amount of elements in this response.
 * @property {CollectionLinks}
 * @property {FileLinkCollectionWriteModelEmbedded}
 */
export type FileLinkCollectionWriteModel = z.infer<typeof fileLinkCollectionWriteModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionWriteModelResponse = z.lazy(() => {
  return z
    .object({
      _type: fileLinkCollectionWriteModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: collectionLinksResponse,
      _embedded: fileLinkCollectionWriteModelEmbeddedResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionWriteModelRequest = z.lazy(() => {
  return z
    .object({
      _type: fileLinkCollectionWriteModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: collectionLinksRequest,
      _embedded: fileLinkCollectionWriteModelEmbeddedRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});
