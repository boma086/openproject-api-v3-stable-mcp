// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  FileLinkWriteModel,
  fileLinkWriteModel,
  fileLinkWriteModelRequest,
  fileLinkWriteModelResponse,
} from './file-link-write-model';

/**
 * The shape of the model inside the application code - what the users use
 */
export const fileLinkCollectionWriteModelEmbedded = z.lazy(() => {
  return z.object({
    elements: z.array(fileLinkWriteModel),
  });
});

/**
 *
 * @typedef  {FileLinkCollectionWriteModelEmbedded} fileLinkCollectionWriteModelEmbedded
 * @property {FileLinkWriteModel[]}
 */
export type FileLinkCollectionWriteModelEmbedded = z.infer<typeof fileLinkCollectionWriteModelEmbedded>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionWriteModelEmbeddedResponse = z.lazy(() => {
  return z
    .object({
      elements: z.array(fileLinkWriteModelResponse),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const fileLinkCollectionWriteModelEmbeddedRequest = z.lazy(() => {
  return z
    .object({
      elements: z.array(fileLinkWriteModelRequest),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});
