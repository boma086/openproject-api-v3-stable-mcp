// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf58, _linksSelf58, _linksSelf58Request, _linksSelf58Response } from './_links-self-58';

/**
 * The shape of the model inside the application code - what the users use
 */
export const availableAssigneesModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf58,
  });
});

/**
 * 
 * @typedef  {AvailableAssigneesModelLinks} availableAssigneesModelLinks   
 * @property {_LinksSelf58} - The available assignees collection

``Resource``: AvailableAssigneesCollection
 */
export type AvailableAssigneesModelLinks = z.infer<typeof availableAssigneesModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const availableAssigneesModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf58Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const availableAssigneesModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf58Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
