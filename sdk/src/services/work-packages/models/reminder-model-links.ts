// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksCreator3, _linksCreator3, _linksCreator3Request, _linksCreator3Response } from './_links-creator-3';

/**
 * The shape of the model inside the application code - what the users use
 */
export const reminderModelLinks = z.lazy(() => {
  return z.object({
    creator: _linksCreator3,
  });
});

/**
 * 
 * @typedef  {ReminderModelLinks} reminderModelLinks   
 * @property {_LinksCreator3} - The person that created the reminder

``Resource``: User
 */
export type ReminderModelLinks = z.infer<typeof reminderModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const reminderModelLinksResponse = z.lazy(() => {
  return z
    .object({
      creator: _linksCreator3Response,
    })
    .transform((data) => ({
      creator: data['creator'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const reminderModelLinksRequest = z.lazy(() => {
  return z
    .object({
      creator: _linksCreator3Request,
    })
    .transform((data) => ({
      creator: data['creator'],
    }));
});
