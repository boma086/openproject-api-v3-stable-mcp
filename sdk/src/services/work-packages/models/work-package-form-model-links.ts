// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf57, _linksSelf57, _linksSelf57Request, _linksSelf57Response } from './_links-self-57';
import { _LinksValidate2, _linksValidate2, _linksValidate2Request, _linksValidate2Response } from './_links-validate-2';
import {
  _LinksPreviewMarkup3,
  _linksPreviewMarkup3,
  _linksPreviewMarkup3Request,
  _linksPreviewMarkup3Response,
} from './_links-preview-markup-3';
import { CustomFields, customFields, customFieldsRequest, customFieldsResponse } from './custom-fields';
import { ConfigureForm, configureForm, configureFormRequest, configureFormResponse } from './configure-form';

/**
 * The shape of the model inside the application code - what the users use
 */
export const workPackageFormModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf57.optional(),
    validate: _linksValidate2.optional(),
    previewMarkup: _linksPreviewMarkup3.optional(),
    customFields: customFields.optional(),
    configureForm: configureForm.optional(),
  });
});

/**
 * 
 * @typedef  {WorkPackageFormModelLinks} workPackageFormModelLinks   
 * @property {_LinksSelf57} - This form endpoint

``Resource`` : Form
 * @property {_LinksValidate2} - The endpoint for validating the request bodies. Often referring to this very form endpoint.
 * @property {_LinksPreviewMarkup3} - Renders a markup preview for the work package form.
 * @property {CustomFields} - Link to the HTML page for the custom field definitions.
 * @property {ConfigureForm} - Link to the HTML page for the form configuration.
 */
export type WorkPackageFormModelLinks = z.infer<typeof workPackageFormModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageFormModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf57Response.optional(),
      validate: _linksValidate2Response.optional(),
      previewMarkup: _linksPreviewMarkup3Response.optional(),
      customFields: customFieldsResponse.optional(),
      configureForm: configureFormResponse.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      validate: data['validate'],
      previewMarkup: data['previewMarkup'],
      customFields: data['customFields'],
      configureForm: data['configureForm'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageFormModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf57Request.optional(),
      validate: _linksValidate2Request.optional(),
      previewMarkup: _linksPreviewMarkup3Request.optional(),
      customFields: customFieldsRequest.optional(),
      configureForm: configureFormRequest.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      validate: data['validate'],
      previewMarkup: data['previewMarkup'],
      customFields: data['customFields'],
      configureForm: data['configureForm'],
    }));
});
