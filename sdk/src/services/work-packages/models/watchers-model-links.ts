// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf60, _linksSelf60, _linksSelf60Request, _linksSelf60Response } from './_links-self-60';

/**
 * The shape of the model inside the application code - what the users use
 */
export const watchersModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf60,
  });
});

/**
 * 
 * @typedef  {WatchersModelLinks} watchersModelLinks   
 * @property {_LinksSelf60} - The watcher list

``Resource``: WatchersModel
 */
export type WatchersModelLinks = z.infer<typeof watchersModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const watchersModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf60Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const watchersModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf60Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
