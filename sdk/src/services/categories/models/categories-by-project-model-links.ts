// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf11, _linksSelf11, _linksSelf11Request, _linksSelf11Response } from './_links-self-11';

/**
 * The shape of the model inside the application code - what the users use
 */
export const categoriesByProjectModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf11,
  });
});

/**
 * 
 * @typedef  {CategoriesByProjectModelLinks} categoriesByProjectModelLinks   
 * @property {_LinksSelf11} - The categories collection

``Resource``: CategoriesCollection
 */
export type CategoriesByProjectModelLinks = z.infer<typeof categoriesByProjectModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const categoriesByProjectModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf11Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const categoriesByProjectModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf11Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
