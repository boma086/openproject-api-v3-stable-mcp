// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf18, _linksSelf18, _linksSelf18Request, _linksSelf18Response } from './_links-self-18';

/**
 * The shape of the model inside the application code - what the users use
 */
export const nonWorkingDayModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf18,
  });
});

/**
 * 
 * @typedef  {NonWorkingDayModelLinks} nonWorkingDayModelLinks   
 * @property {_LinksSelf18} - This non-working day.

``Resource``: NonWorkingDay
 */
export type NonWorkingDayModelLinks = z.infer<typeof nonWorkingDayModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf18Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf18Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
