// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { WeekDayModel, weekDayModel, weekDayModelRequest, weekDayModelResponse } from './week-day-model';

/**
 * The shape of the model inside the application code - what the users use
 */
export const weekDayCollectionModelEmbedded = z.lazy(() => {
  return z.object({
    elements: z.array(weekDayModel).min(7).max(7),
  });
});

/**
 *
 * @typedef  {WeekDayCollectionModelEmbedded} weekDayCollectionModelEmbedded
 * @property {WeekDayModel[]} - The array of week days.
 */
export type WeekDayCollectionModelEmbedded = z.infer<typeof weekDayCollectionModelEmbedded>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionModelEmbeddedResponse = z.lazy(() => {
  return z
    .object({
      elements: z.array(weekDayModelResponse).min(7).max(7),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionModelEmbeddedRequest = z.lazy(() => {
  return z
    .object({
      elements: z.array(weekDayModelRequest).min(7).max(7),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});
