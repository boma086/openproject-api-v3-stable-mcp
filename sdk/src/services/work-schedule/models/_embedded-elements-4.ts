// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { ElementsType1, elementsType1 } from './elements-type-1';
import {
  WeekDaySelfLinkModel,
  weekDaySelfLinkModel,
  weekDaySelfLinkModelRequest,
  weekDaySelfLinkModelResponse,
} from './week-day-self-link-model';

/**
 * The shape of the model inside the application code - what the users use
 */
export const _embeddedElements4 = z.lazy(() => {
  return z.object({
    _type: elementsType1,
    working: z.boolean(),
    _links: weekDaySelfLinkModel,
  });
});

/**
 *
 * @typedef  {_EmbeddedElements4} _embeddedElements4
 * @property {ElementsType1}
 * @property {boolean} - `true` for a working day. `false` for a weekend day.
 * @property {WeekDaySelfLinkModel} - Identify a particular week day by its href.
 */
export type _EmbeddedElements4 = z.infer<typeof _embeddedElements4>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const _embeddedElements4Response = z.lazy(() => {
  return z
    .object({
      _type: elementsType1,
      working: z.boolean(),
      _links: weekDaySelfLinkModelResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      working: data['working'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const _embeddedElements4Request = z.lazy(() => {
  return z
    .object({
      _type: elementsType1,
      working: z.boolean(),
      _links: weekDaySelfLinkModelRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      working: data['working'],
      _links: data['_links'],
    }));
});
