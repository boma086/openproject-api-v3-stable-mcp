// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  NonWorkingDayCollectionModelType,
  nonWorkingDayCollectionModelType,
} from './non-working-day-collection-model-type';
import {
  NonWorkingDayCollectionModelLinks,
  nonWorkingDayCollectionModelLinks,
  nonWorkingDayCollectionModelLinksRequest,
  nonWorkingDayCollectionModelLinksResponse,
} from './non-working-day-collection-model-links';
import {
  NonWorkingDayCollectionModelEmbedded,
  nonWorkingDayCollectionModelEmbedded,
  nonWorkingDayCollectionModelEmbeddedRequest,
  nonWorkingDayCollectionModelEmbeddedResponse,
} from './non-working-day-collection-model-embedded';

/**
 * The shape of the model inside the application code - what the users use
 */
export const nonWorkingDayCollectionModel = z.lazy(() => {
  return z.object({
    _type: nonWorkingDayCollectionModelType,
    total: z.number().gte(0),
    count: z.number().gte(0),
    _links: nonWorkingDayCollectionModelLinks,
    _embedded: nonWorkingDayCollectionModelEmbedded,
  });
});

/**
 *
 * @typedef  {NonWorkingDayCollectionModel} nonWorkingDayCollectionModel
 * @property {NonWorkingDayCollectionModelType}
 * @property {number} - The total amount of elements available in the collection.
 * @property {number} - Actual amount of elements in this response.
 * @property {NonWorkingDayCollectionModelLinks}
 * @property {NonWorkingDayCollectionModelEmbedded}
 */
export type NonWorkingDayCollectionModel = z.infer<typeof nonWorkingDayCollectionModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayCollectionModelResponse = z.lazy(() => {
  return z
    .object({
      _type: nonWorkingDayCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: nonWorkingDayCollectionModelLinksResponse,
      _embedded: nonWorkingDayCollectionModelEmbeddedResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayCollectionModelRequest = z.lazy(() => {
  return z
    .object({
      _type: nonWorkingDayCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: nonWorkingDayCollectionModelLinksRequest,
      _embedded: nonWorkingDayCollectionModelEmbeddedRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});
