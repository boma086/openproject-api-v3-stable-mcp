// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { NonWorkingDayModelType, nonWorkingDayModelType } from './non-working-day-model-type';
import {
  NonWorkingDayModelLinks,
  nonWorkingDayModelLinks,
  nonWorkingDayModelLinksRequest,
  nonWorkingDayModelLinksResponse,
} from './non-working-day-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const nonWorkingDayModel = z.lazy(() => {
  return z.object({
    _type: nonWorkingDayModelType,
    date: z.string(),
    name: z.string(),
    _links: nonWorkingDayModelLinks.optional(),
  });
});

/**
 *
 * @typedef  {NonWorkingDayModel} nonWorkingDayModel
 * @property {NonWorkingDayModelType}
 * @property {string} - Date of the non-working day.
 * @property {string} - Descriptive name for the non-working day.
 * @property {NonWorkingDayModelLinks}
 */
export type NonWorkingDayModel = z.infer<typeof nonWorkingDayModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayModelResponse = z.lazy(() => {
  return z
    .object({
      _type: nonWorkingDayModelType,
      date: z.string(),
      name: z.string(),
      _links: nonWorkingDayModelLinksResponse.optional(),
    })
    .transform((data) => ({
      _type: data['_type'],
      date: data['date'],
      name: data['name'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayModelRequest = z.lazy(() => {
  return z
    .object({
      _type: nonWorkingDayModelType,
      date: z.string(),
      name: z.string(),
      _links: nonWorkingDayModelLinksRequest.optional(),
    })
    .transform((data) => ({
      _type: data['_type'],
      date: data['date'],
      name: data['name'],
      _links: data['_links'],
    }));
});
