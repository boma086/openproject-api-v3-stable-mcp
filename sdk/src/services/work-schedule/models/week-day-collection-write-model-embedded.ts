// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _EmbeddedElements4,
  _embeddedElements4,
  _embeddedElements4Request,
  _embeddedElements4Response,
} from './_embedded-elements-4';

/**
 * The shape of the model inside the application code - what the users use
 */
export const weekDayCollectionWriteModelEmbedded = z.lazy(() => {
  return z.object({
    elements: z.array(_embeddedElements4).min(1).max(7),
  });
});

/**
 *
 * @typedef  {WeekDayCollectionWriteModelEmbedded} weekDayCollectionWriteModelEmbedded
 * @property {_EmbeddedElements4[]} - The array of week days.
 */
export type WeekDayCollectionWriteModelEmbedded = z.infer<typeof weekDayCollectionWriteModelEmbedded>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionWriteModelEmbeddedResponse = z.lazy(() => {
  return z
    .object({
      elements: z.array(_embeddedElements4Response).min(1).max(7),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionWriteModelEmbeddedRequest = z.lazy(() => {
  return z
    .object({
      elements: z.array(_embeddedElements4Request).min(1).max(7),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});
