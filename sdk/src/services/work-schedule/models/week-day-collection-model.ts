// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { WeekDayCollectionModelType, weekDayCollectionModelType } from './week-day-collection-model-type';
import {
  WeekDayCollectionModelLinks,
  weekDayCollectionModelLinks,
  weekDayCollectionModelLinksRequest,
  weekDayCollectionModelLinksResponse,
} from './week-day-collection-model-links';
import {
  WeekDayCollectionModelEmbedded,
  weekDayCollectionModelEmbedded,
  weekDayCollectionModelEmbeddedRequest,
  weekDayCollectionModelEmbeddedResponse,
} from './week-day-collection-model-embedded';

/**
 * The shape of the model inside the application code - what the users use
 */
export const weekDayCollectionModel = z.lazy(() => {
  return z.object({
    _type: weekDayCollectionModelType,
    total: z.number().gte(0),
    count: z.number().gte(0),
    _links: weekDayCollectionModelLinks,
    _embedded: weekDayCollectionModelEmbedded,
  });
});

/**
 *
 * @typedef  {WeekDayCollectionModel} weekDayCollectionModel
 * @property {WeekDayCollectionModelType}
 * @property {number} - The total amount of elements available in the collection.
 * @property {number} - Actual amount of elements in this response.
 * @property {WeekDayCollectionModelLinks}
 * @property {WeekDayCollectionModelEmbedded}
 */
export type WeekDayCollectionModel = z.infer<typeof weekDayCollectionModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionModelResponse = z.lazy(() => {
  return z
    .object({
      _type: weekDayCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: weekDayCollectionModelLinksResponse,
      _embedded: weekDayCollectionModelEmbeddedResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const weekDayCollectionModelRequest = z.lazy(() => {
  return z
    .object({
      _type: weekDayCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: weekDayCollectionModelLinksRequest,
      _embedded: weekDayCollectionModelEmbeddedRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});
