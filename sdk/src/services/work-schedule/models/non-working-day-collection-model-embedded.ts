// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  NonWorkingDayModel,
  nonWorkingDayModel,
  nonWorkingDayModelRequest,
  nonWorkingDayModelResponse,
} from './non-working-day-model';

/**
 * The shape of the model inside the application code - what the users use
 */
export const nonWorkingDayCollectionModelEmbedded = z.lazy(() => {
  return z.object({
    elements: z.array(nonWorkingDayModel),
  });
});

/**
 *
 * @typedef  {NonWorkingDayCollectionModelEmbedded} nonWorkingDayCollectionModelEmbedded
 * @property {NonWorkingDayModel[]} - The array of non working days. Each day has a name and a date.
 */
export type NonWorkingDayCollectionModelEmbedded = z.infer<typeof nonWorkingDayCollectionModelEmbedded>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayCollectionModelEmbeddedResponse = z.lazy(() => {
  return z
    .object({
      elements: z.array(nonWorkingDayModelResponse),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const nonWorkingDayCollectionModelEmbeddedRequest = z.lazy(() => {
  return z
    .object({
      elements: z.array(nonWorkingDayModelRequest),
    })
    .transform((data) => ({
      elements: data['elements'],
    }));
});
