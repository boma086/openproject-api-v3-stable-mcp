// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf70, _linksSelf70, _linksSelf70Request, _linksSelf70Response } from './_links-self-70';

/**
 * The shape of the model inside the application code - what the users use
 */
export const statusModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf70,
  });
});

/**
 * 
 * @typedef  {StatusModelLinks} statusModelLinks   
 * @property {_LinksSelf70} - This status

``Resource``: Status
 */
export type StatusModelLinks = z.infer<typeof statusModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const statusModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf70Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const statusModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf70Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
