// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { TimeEntryCollectionModelType, timeEntryCollectionModelType } from './time-entry-collection-model-type';
import {
  TimeEntryCollectionModelLinks,
  timeEntryCollectionModelLinks,
  timeEntryCollectionModelLinksRequest,
  timeEntryCollectionModelLinksResponse,
} from './time-entry-collection-model-links';
import {
  TimeEntryCollectionModelEmbedded,
  timeEntryCollectionModelEmbedded,
  timeEntryCollectionModelEmbeddedRequest,
  timeEntryCollectionModelEmbeddedResponse,
} from './time-entry-collection-model-embedded';

/**
 * The shape of the model inside the application code - what the users use
 */
export const timeEntryCollectionModel = z.lazy(() => {
  return z.object({
    _type: timeEntryCollectionModelType,
    total: z.number().gte(0),
    count: z.number().gte(0),
    _links: timeEntryCollectionModelLinks,
    _embedded: timeEntryCollectionModelEmbedded,
  });
});

/**
 *
 * @typedef  {TimeEntryCollectionModel} timeEntryCollectionModel
 * @property {TimeEntryCollectionModelType}
 * @property {number} - The total amount of elements available in the collection.
 * @property {number} - Actual amount of elements in this response.
 * @property {TimeEntryCollectionModelLinks}
 * @property {TimeEntryCollectionModelEmbedded}
 */
export type TimeEntryCollectionModel = z.infer<typeof timeEntryCollectionModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const timeEntryCollectionModelResponse = z.lazy(() => {
  return z
    .object({
      _type: timeEntryCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: timeEntryCollectionModelLinksResponse,
      _embedded: timeEntryCollectionModelEmbeddedResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const timeEntryCollectionModelRequest = z.lazy(() => {
  return z
    .object({
      _type: timeEntryCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: timeEntryCollectionModelLinksRequest,
      _embedded: timeEntryCollectionModelEmbeddedRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});
