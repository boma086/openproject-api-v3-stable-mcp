// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { CustomActionModelType, customActionModelType } from './custom-action-model-type';
import {
  CustomActionModelLinks,
  customActionModelLinks,
  customActionModelLinksRequest,
  customActionModelLinksResponse,
} from './custom-action-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const customActionModel = z.lazy(() => {
  return z.object({
    _type: customActionModelType.optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    _links: customActionModelLinks.optional(),
  });
});

/**
 *
 * @typedef  {CustomActionModel} customActionModel
 * @property {CustomActionModelType}
 * @property {string} - The name of the custom action
 * @property {string} - The description for the custom action
 * @property {CustomActionModelLinks}
 */
export type CustomActionModel = z.infer<typeof customActionModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const customActionModelResponse = z.lazy(() => {
  return z
    .object({
      _type: customActionModelType.optional(),
      name: z.string().optional(),
      description: z.string().optional(),
      _links: customActionModelLinksResponse.optional(),
    })
    .transform((data) => ({
      _type: data['_type'],
      name: data['name'],
      description: data['description'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const customActionModelRequest = z.lazy(() => {
  return z
    .object({
      _type: customActionModelType.optional(),
      name: z.string().optional(),
      description: z.string().optional(),
      _links: customActionModelLinksRequest.optional(),
    })
    .transform((data) => ({
      _type: data['_type'],
      name: data['name'],
      description: data['description'],
      _links: data['_links'],
    }));
});
