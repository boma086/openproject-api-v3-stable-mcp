// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _LinksWorkPackage2,
  _linksWorkPackage2,
  _linksWorkPackage2Request,
  _linksWorkPackage2Response,
} from './_links-work-package-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const executeCustomActionRequestLinks = z.lazy(() => {
  return z.object({
    workPackage: _linksWorkPackage2.optional(),
  });
});

/**
 *
 * @typedef  {ExecuteCustomActionRequestLinks} executeCustomActionRequestLinks
 * @property {_LinksWorkPackage2}
 */
export type ExecuteCustomActionRequestLinks = z.infer<typeof executeCustomActionRequestLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const executeCustomActionRequestLinksResponse = z.lazy(() => {
  return z
    .object({
      workPackage: _linksWorkPackage2Response.optional(),
    })
    .transform((data) => ({
      workPackage: data['workPackage'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const executeCustomActionRequestLinksRequest = z.lazy(() => {
  return z
    .object({
      workPackage: _linksWorkPackage2Request.optional(),
    })
    .transform((data) => ({
      workPackage: data['workPackage'],
    }));
});
