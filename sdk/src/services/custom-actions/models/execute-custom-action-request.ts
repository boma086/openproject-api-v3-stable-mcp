// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  ExecuteCustomActionRequestLinks,
  executeCustomActionRequestLinks,
  executeCustomActionRequestLinksRequest,
  executeCustomActionRequestLinksResponse,
} from './execute-custom-action-request-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const executeCustomActionRequest = z.lazy(() => {
  return z.object({
    _links: executeCustomActionRequestLinks.optional(),
    lockVersion: z.string().optional(),
  });
});

/**
 *
 * @typedef  {ExecuteCustomActionRequest} executeCustomActionRequest
 * @property {ExecuteCustomActionRequestLinks}
 * @property {string}
 */
export type ExecuteCustomActionRequest = z.infer<typeof executeCustomActionRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const executeCustomActionRequestResponse = z.lazy(() => {
  return z
    .object({
      _links: executeCustomActionRequestLinksResponse.optional(),
      lockVersion: z.string().optional(),
    })
    .transform((data) => ({
      _links: data['_links'],
      lockVersion: data['lockVersion'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const executeCustomActionRequestRequest = z.lazy(() => {
  return z
    .object({
      _links: executeCustomActionRequestLinksRequest.optional(),
      lockVersion: z.string().optional(),
    })
    .transform((data) => ({
      _links: data['_links'],
      lockVersion: data['lockVersion'],
    }));
});
