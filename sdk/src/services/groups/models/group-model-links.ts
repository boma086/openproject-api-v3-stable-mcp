// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksMembers1, _linksMembers1, _linksMembers1Request, _linksMembers1Response } from './_links-members-1';
import { _LinksDelete8, _linksDelete8, _linksDelete8Request, _linksDelete8Response } from './_links-delete-8';
import {
  _LinksUpdateImmediately4,
  _linksUpdateImmediately4,
  _linksUpdateImmediately4Request,
  _linksUpdateImmediately4Response,
} from './_links-update-immediately-4';

/**
 * The shape of the model inside the application code - what the users use
 */
export const groupModelLinks = z.lazy(() => {
  return z.object({
    members: z.array(_linksMembers1).optional(),
    delete: _linksDelete8.optional(),
    updateImmediately: _linksUpdateImmediately4.optional(),
  });
});

/**
 * 
 * @typedef  {GroupModelLinks} groupModelLinks   
 * @property {_LinksMembers1[]} 
 * @property {_LinksDelete8} - An href to delete the group.

# Conditions:

- `admin`
 * @property {_LinksUpdateImmediately4} - An href to update the group.

# Conditions:

- `admin`

``Resource``: Group
 */
export type GroupModelLinks = z.infer<typeof groupModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const groupModelLinksResponse = z.lazy(() => {
  return z
    .object({
      members: z.array(_linksMembers1Response).optional(),
      delete: _linksDelete8Response.optional(),
      updateImmediately: _linksUpdateImmediately4Response.optional(),
    })
    .transform((data) => ({
      members: data['members'],
      delete: data['delete'],
      updateImmediately: data['updateImmediately'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const groupModelLinksRequest = z.lazy(() => {
  return z
    .object({
      members: z.array(_linksMembers1Request).optional(),
      delete: _linksDelete8Request.optional(),
      updateImmediately: _linksUpdateImmediately4Request.optional(),
    })
    .transform((data) => ({
      members: data['members'],
      delete: data['delete'],
      updateImmediately: data['updateImmediately'],
    }));
});
