// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { HelpTextCollectionModelType, helpTextCollectionModelType } from './help-text-collection-model-type';
import {
  HelpTextCollectionModelLinks,
  helpTextCollectionModelLinks,
  helpTextCollectionModelLinksRequest,
  helpTextCollectionModelLinksResponse,
} from './help-text-collection-model-links';
import {
  HelpTextCollectionModelEmbedded,
  helpTextCollectionModelEmbedded,
  helpTextCollectionModelEmbeddedRequest,
  helpTextCollectionModelEmbeddedResponse,
} from './help-text-collection-model-embedded';

/**
 * The shape of the model inside the application code - what the users use
 */
export const helpTextCollectionModel = z.lazy(() => {
  return z.object({
    _type: helpTextCollectionModelType,
    total: z.number().gte(0),
    count: z.number().gte(0),
    _links: helpTextCollectionModelLinks,
    _embedded: helpTextCollectionModelEmbedded,
  });
});

/**
 *
 * @typedef  {HelpTextCollectionModel} helpTextCollectionModel
 * @property {HelpTextCollectionModelType}
 * @property {number} - The total amount of elements available in the collection.
 * @property {number} - Actual amount of elements in this response.
 * @property {HelpTextCollectionModelLinks}
 * @property {HelpTextCollectionModelEmbedded}
 */
export type HelpTextCollectionModel = z.infer<typeof helpTextCollectionModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const helpTextCollectionModelResponse = z.lazy(() => {
  return z
    .object({
      _type: helpTextCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: helpTextCollectionModelLinksResponse,
      _embedded: helpTextCollectionModelEmbeddedResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const helpTextCollectionModelRequest = z.lazy(() => {
  return z
    .object({
      _type: helpTextCollectionModelType,
      total: z.number().gte(0),
      count: z.number().gte(0),
      _links: helpTextCollectionModelLinksRequest,
      _embedded: helpTextCollectionModelEmbeddedRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      total: data['total'],
      count: data['count'],
      _links: data['_links'],
      _embedded: data['_embedded'],
    }));
});
