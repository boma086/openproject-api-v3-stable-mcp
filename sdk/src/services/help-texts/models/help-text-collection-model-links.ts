// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf36, _linksSelf36, _linksSelf36Request, _linksSelf36Response } from './_links-self-36';

/**
 * The shape of the model inside the application code - what the users use
 */
export const helpTextCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf36,
  });
});

/**
 * 
 * @typedef  {HelpTextCollectionModelLinks} helpTextCollectionModelLinks   
 * @property {_LinksSelf36} - This help text collection

``Resource``: HelpTextCollectionModel
 */
export type HelpTextCollectionModelLinks = z.infer<typeof helpTextCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const helpTextCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf36Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const helpTextCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf36Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
