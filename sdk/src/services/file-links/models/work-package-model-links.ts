// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _LinksAddComment2,
  _linksAddComment2,
  _linksAddComment2Request,
  _linksAddComment2Response,
} from './_links-add-comment-2';
import {
  _LinksAddRelation2,
  _linksAddRelation2,
  _linksAddRelation2Request,
  _linksAddRelation2Response,
} from './_links-add-relation-2';
import {
  _LinksAddWatcher2,
  _linksAddWatcher2,
  _linksAddWatcher2Request,
  _linksAddWatcher2Response,
} from './_links-add-watcher-2';
import {
  _LinksCustomActions2,
  _linksCustomActions2,
  _linksCustomActions2Request,
  _linksCustomActions2Response,
} from './_links-custom-actions-2';
import {
  _LinksPreviewMarkup2,
  _linksPreviewMarkup2,
  _linksPreviewMarkup2Request,
  _linksPreviewMarkup2Response,
} from './_links-preview-markup-2';
import {
  _LinksRemoveWatcher2,
  _linksRemoveWatcher2,
  _linksRemoveWatcher2Request,
  _linksRemoveWatcher2Response,
} from './_links-remove-watcher-2';
import { _LinksDelete5, _linksDelete5, _linksDelete5Request, _linksDelete5Response } from './_links-delete-5';
import { _LinksLogTime2, _linksLogTime2, _linksLogTime2Request, _linksLogTime2Response } from './_links-log-time-2';
import { _LinksMove2, _linksMove2, _linksMove2Request, _linksMove2Response } from './_links-move-2';
import { _LinksCopy2, _linksCopy2, _linksCopy2Request, _linksCopy2Response } from './_links-copy-2';
import { _LinksUnwatch2, _linksUnwatch2, _linksUnwatch2Request, _linksUnwatch2Response } from './_links-unwatch-2';
import { _LinksUpdate3, _linksUpdate3, _linksUpdate3Request, _linksUpdate3Response } from './_links-update-3';
import {
  _LinksUpdateImmediately2,
  _linksUpdateImmediately2,
  _linksUpdateImmediately2Request,
  _linksUpdateImmediately2Response,
} from './_links-update-immediately-2';
import { _LinksWatch2, _linksWatch2, _linksWatch2Request, _linksWatch2Response } from './_links-watch-2';
import { _LinksSelf25, _linksSelf25, _linksSelf25Request, _linksSelf25Response } from './_links-self-25';
import { _LinksSchema2, _linksSchema2, _linksSchema2Request, _linksSchema2Response } from './_links-schema-2';
import {
  _LinksAncestors2,
  _linksAncestors2,
  _linksAncestors2Request,
  _linksAncestors2Response,
} from './_links-ancestors-2';
import {
  _LinksAttachments4,
  _linksAttachments4,
  _linksAttachments4Request,
  _linksAttachments4Response,
} from './_links-attachments-4';
import {
  _LinksAddAttachment3,
  _linksAddAttachment3,
  _linksAddAttachment3Request,
  _linksAddAttachment3Response,
} from './_links-add-attachment-3';
import {
  _LinksPrepareAttachment2,
  _linksPrepareAttachment2,
  _linksPrepareAttachment2Request,
  _linksPrepareAttachment2Response,
} from './_links-prepare-attachment-2';
import { _LinksAuthor5, _linksAuthor5, _linksAuthor5Request, _linksAuthor5Response } from './_links-author-5';
import { _LinksAssignee2, _linksAssignee2, _linksAssignee2Request, _linksAssignee2Response } from './_links-assignee-2';
import {
  _LinksAvailableWatchers2,
  _linksAvailableWatchers2,
  _linksAvailableWatchers2Request,
  _linksAvailableWatchers2Response,
} from './_links-available-watchers-2';
import { _LinksBudget2, _linksBudget2, _linksBudget2Request, _linksBudget2Response } from './_links-budget-2';
import { _LinksCategory2, _linksCategory2, _linksCategory2Request, _linksCategory2Response } from './_links-category-2';
import { _LinksChildren3, _linksChildren3, _linksChildren3Request, _linksChildren3Response } from './_links-children-3';
import {
  _LinksAddFileLink2,
  _linksAddFileLink2,
  _linksAddFileLink2Request,
  _linksAddFileLink2Response,
} from './_links-add-file-link-2';
import {
  _LinksFileLinks2,
  _linksFileLinks2,
  _linksFileLinks2Request,
  _linksFileLinks2Response,
} from './_links-file-links-2';
import { _LinksParent3, _linksParent3, _linksParent3Request, _linksParent3Response } from './_links-parent-3';
import { _LinksPriority2, _linksPriority2, _linksPriority2Request, _linksPriority2Response } from './_links-priority-2';
import { _LinksProject5, _linksProject5, _linksProject5Request, _linksProject5Response } from './_links-project-5';
import {
  _LinksResponsible2,
  _linksResponsible2,
  _linksResponsible2Request,
  _linksResponsible2Response,
} from './_links-responsible-2';
import {
  _LinksRelations3,
  _linksRelations3,
  _linksRelations3Request,
  _linksRelations3Response,
} from './_links-relations-3';
import {
  _LinksRevisions2,
  _linksRevisions2,
  _linksRevisions2Request,
  _linksRevisions2Response,
} from './_links-revisions-2';
import { _LinksStatus2, _linksStatus2, _linksStatus2Request, _linksStatus2Response } from './_links-status-2';
import {
  _LinksTimeEntries3,
  _linksTimeEntries3,
  _linksTimeEntries3Request,
  _linksTimeEntries3Response,
} from './_links-time-entries-3';
import { _LinksType3, _linksType3, _linksType3Request, _linksType3Response } from './_links-type-3';
import { _LinksVersion2, _linksVersion2, _linksVersion2Request, _linksVersion2Response } from './_links-version-2';
import { _LinksWatchers2, _linksWatchers2, _linksWatchers2Request, _linksWatchers2Response } from './_links-watchers-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const workPackageModelLinks = z.lazy(() => {
  return z.object({
    addComment: _linksAddComment2.optional(),
    addRelation: _linksAddRelation2.optional(),
    addWatcher: _linksAddWatcher2.optional(),
    customActions: z.array(_linksCustomActions2).optional(),
    previewMarkup: _linksPreviewMarkup2.optional(),
    removeWatcher: _linksRemoveWatcher2.optional(),
    delete: _linksDelete5.optional(),
    logTime: _linksLogTime2.optional(),
    move: _linksMove2.optional(),
    copy: _linksCopy2.optional(),
    unwatch: _linksUnwatch2.optional(),
    update: _linksUpdate3.optional(),
    updateImmediately: _linksUpdateImmediately2.optional(),
    watch: _linksWatch2.optional(),
    self: _linksSelf25,
    schema: _linksSchema2,
    ancestors: z.array(_linksAncestors2),
    attachments: _linksAttachments4,
    addAttachment: _linksAddAttachment3.optional(),
    prepareAttachment: _linksPrepareAttachment2.optional(),
    author: _linksAuthor5,
    assignee: _linksAssignee2.optional(),
    availableWatchers: _linksAvailableWatchers2.optional(),
    budget: _linksBudget2.optional(),
    category: _linksCategory2.optional(),
    children: z.array(_linksChildren3),
    addFileLink: _linksAddFileLink2.optional(),
    fileLinks: _linksFileLinks2.optional(),
    parent: _linksParent3.optional(),
    priority: _linksPriority2,
    project: _linksProject5,
    responsible: _linksResponsible2.optional(),
    relations: _linksRelations3.optional(),
    revisions: _linksRevisions2.optional(),
    status: _linksStatus2,
    timeEntries: _linksTimeEntries3.optional(),
    type: _linksType3,
    version: _linksVersion2.optional(),
    watchers: _linksWatchers2.optional(),
  });
});

/**
 * 
 * @typedef  {WorkPackageModelLinks} workPackageModelLinks   
 * @property {_LinksAddComment2} - Post comment to WP

# Conditions

``Permission``: add work package notes
 * @property {_LinksAddRelation2} - Adds a relation to this work package.

# Conditions

``Permission``: manage wp relations
 * @property {_LinksAddWatcher2} - Add any user to WP watchers

# Conditions

``Permission``: add watcher
 * @property {_LinksCustomActions2[]} 
 * @property {_LinksPreviewMarkup2} - Post markup (in markdown) here to receive an HTML-rendered response
 * @property {_LinksRemoveWatcher2} - Remove any user from WP watchers

# Conditions

``Permission``: delete watcher
 * @property {_LinksDelete5} - Delete this work package

# Conditions

``Permission``: delete_work_packages
 * @property {_LinksLogTime2} - Create time entries on the work package

# Conditions

``Permission``: log_time or log_own_time
 * @property {_LinksMove2} - Link to page for moving this work package

# Conditions

``Permission``: move_work_packages
 * @property {_LinksCopy2} - Link to page for copying this work package

# Conditions

``Permission``: add_work_packages
 * @property {_LinksUnwatch2} - Remove current user from WP watchers

# Conditions

logged in; watching
 * @property {_LinksUpdate3} - Form endpoint that aids in preparing and performing edits on a work package

# Conditions

``Permission``: edit work package
 * @property {_LinksUpdateImmediately2} - Directly perform edits on a work package

# Conditions

``Permission``: edit work package
 * @property {_LinksWatch2} - Add current user to WP watchers

# Conditions

logged in; not watching
 * @property {_LinksSelf25} - This work package

``Resource``: WorkPackage
 * @property {_LinksSchema2} - The schema of this work package

``Resource``: Schema
 * @property {_LinksAncestors2[]} 
 * @property {_LinksAttachments4} - The files attached to this work package

``Resource``: Collection

# Conditions

- ``Setting``: deactivate_work_package_attachments set to false in related project
 * @property {_LinksAddAttachment3} - Attach a file to the work package

# Conditions

- ``Permission``: edit work package
 * @property {_LinksPrepareAttachment2} - Attach a file to the work package

# Conditions

- ``Setting``: direct uploads enabled
 * @property {_LinksAuthor5} - The person that created the work package

``Resource``: User
 * @property {_LinksAssignee2} - The person that is intended to work on the work package

``Resource``: User
 * @property {_LinksAvailableWatchers2} - All users that can be added to the work package as watchers.

``Resource``: User

# Conditions

``Permission`` add work package watchers
 * @property {_LinksBudget2} - The budget this work package is associated to

``Resource``: Budget

# Conditions

``Permission`` view cost objects
 * @property {_LinksCategory2} - The category of the work package

``Resource``: Category
 * @property {_LinksChildren3[]} 
 * @property {_LinksAddFileLink2} - Add a file link to the work package

# Conditions

``Permission``: manage_file_links
 * @property {_LinksFileLinks2} - Gets the file link collection of this work package

# Conditions

``Permission``: view_file_links
 * @property {_LinksParent3} - Parent work package

``Resource``: WorkPackage
 * @property {_LinksPriority2} - The priority of the work package

``Resource``: Priority
 * @property {_LinksProject5} - The project to which the work package belongs

``Resource``: Project
 * @property {_LinksResponsible2} - The person that is responsible for the overall outcome

``Resource``: User
 * @property {_LinksRelations3} - Relations this work package is involved in

``Resource``: Relation

# Conditions

``Permission`` view work packages
 * @property {_LinksRevisions2} - Revisions that are referencing the work package

``Resource``: Revision

# Conditions

``Permission`` view changesets
 * @property {_LinksStatus2} - The current status of the work package

``Resource``: Status
 * @property {_LinksTimeEntries3} - All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.

``Resource``: N/A

# Conditions

``Permission`` view time entries
 * @property {_LinksType3} - The type of the work package

``Resource``: Type
 * @property {_LinksVersion2} - The version associated to the work package

``Resource``: Version
 * @property {_LinksWatchers2} - All users that are currently watching this work package

``Resource``: Collection

# Conditions

``Permission`` view work package watchers
 */
export type WorkPackageModelLinks = z.infer<typeof workPackageModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageModelLinksResponse = z.lazy(() => {
  return z
    .object({
      addComment: _linksAddComment2Response.optional(),
      addRelation: _linksAddRelation2Response.optional(),
      addWatcher: _linksAddWatcher2Response.optional(),
      customActions: z.array(_linksCustomActions2Response).optional(),
      previewMarkup: _linksPreviewMarkup2Response.optional(),
      removeWatcher: _linksRemoveWatcher2Response.optional(),
      delete: _linksDelete5Response.optional(),
      logTime: _linksLogTime2Response.optional(),
      move: _linksMove2Response.optional(),
      copy: _linksCopy2Response.optional(),
      unwatch: _linksUnwatch2Response.optional(),
      update: _linksUpdate3Response.optional(),
      updateImmediately: _linksUpdateImmediately2Response.optional(),
      watch: _linksWatch2Response.optional(),
      self: _linksSelf25Response,
      schema: _linksSchema2Response,
      ancestors: z.array(_linksAncestors2Response),
      attachments: _linksAttachments4Response,
      addAttachment: _linksAddAttachment3Response.optional(),
      prepareAttachment: _linksPrepareAttachment2Response.optional(),
      author: _linksAuthor5Response,
      assignee: _linksAssignee2Response.optional(),
      availableWatchers: _linksAvailableWatchers2Response.optional(),
      budget: _linksBudget2Response.optional(),
      category: _linksCategory2Response.optional(),
      children: z.array(_linksChildren3Response),
      addFileLink: _linksAddFileLink2Response.optional(),
      fileLinks: _linksFileLinks2Response.optional(),
      parent: _linksParent3Response.optional(),
      priority: _linksPriority2Response,
      project: _linksProject5Response,
      responsible: _linksResponsible2Response.optional(),
      relations: _linksRelations3Response.optional(),
      revisions: _linksRevisions2Response.optional(),
      status: _linksStatus2Response,
      timeEntries: _linksTimeEntries3Response.optional(),
      type: _linksType3Response,
      version: _linksVersion2Response.optional(),
      watchers: _linksWatchers2Response.optional(),
    })
    .transform((data) => ({
      addComment: data['addComment'],
      addRelation: data['addRelation'],
      addWatcher: data['addWatcher'],
      customActions: data['customActions'],
      previewMarkup: data['previewMarkup'],
      removeWatcher: data['removeWatcher'],
      delete: data['delete'],
      logTime: data['logTime'],
      move: data['move'],
      copy: data['copy'],
      unwatch: data['unwatch'],
      update: data['update'],
      updateImmediately: data['updateImmediately'],
      watch: data['watch'],
      self: data['self'],
      schema: data['schema'],
      ancestors: data['ancestors'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      prepareAttachment: data['prepareAttachment'],
      author: data['author'],
      assignee: data['assignee'],
      availableWatchers: data['availableWatchers'],
      budget: data['budget'],
      category: data['category'],
      children: data['children'],
      addFileLink: data['addFileLink'],
      fileLinks: data['fileLinks'],
      parent: data['parent'],
      priority: data['priority'],
      project: data['project'],
      responsible: data['responsible'],
      relations: data['relations'],
      revisions: data['revisions'],
      status: data['status'],
      timeEntries: data['timeEntries'],
      type: data['type'],
      version: data['version'],
      watchers: data['watchers'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageModelLinksRequest = z.lazy(() => {
  return z
    .object({
      addComment: _linksAddComment2Request.optional(),
      addRelation: _linksAddRelation2Request.optional(),
      addWatcher: _linksAddWatcher2Request.optional(),
      customActions: z.array(_linksCustomActions2Request).optional(),
      previewMarkup: _linksPreviewMarkup2Request.optional(),
      removeWatcher: _linksRemoveWatcher2Request.optional(),
      delete: _linksDelete5Request.optional(),
      logTime: _linksLogTime2Request.optional(),
      move: _linksMove2Request.optional(),
      copy: _linksCopy2Request.optional(),
      unwatch: _linksUnwatch2Request.optional(),
      update: _linksUpdate3Request.optional(),
      updateImmediately: _linksUpdateImmediately2Request.optional(),
      watch: _linksWatch2Request.optional(),
      self: _linksSelf25Request,
      schema: _linksSchema2Request,
      ancestors: z.array(_linksAncestors2Request),
      attachments: _linksAttachments4Request,
      addAttachment: _linksAddAttachment3Request.optional(),
      prepareAttachment: _linksPrepareAttachment2Request.optional(),
      author: _linksAuthor5Request,
      assignee: _linksAssignee2Request.optional(),
      availableWatchers: _linksAvailableWatchers2Request.optional(),
      budget: _linksBudget2Request.optional(),
      category: _linksCategory2Request.optional(),
      children: z.array(_linksChildren3Request),
      addFileLink: _linksAddFileLink2Request.optional(),
      fileLinks: _linksFileLinks2Request.optional(),
      parent: _linksParent3Request.optional(),
      priority: _linksPriority2Request,
      project: _linksProject5Request,
      responsible: _linksResponsible2Request.optional(),
      relations: _linksRelations3Request.optional(),
      revisions: _linksRevisions2Request.optional(),
      status: _linksStatus2Request,
      timeEntries: _linksTimeEntries3Request.optional(),
      type: _linksType3Request,
      version: _linksVersion2Request.optional(),
      watchers: _linksWatchers2Request.optional(),
    })
    .transform((data) => ({
      addComment: data['addComment'],
      addRelation: data['addRelation'],
      addWatcher: data['addWatcher'],
      customActions: data['customActions'],
      previewMarkup: data['previewMarkup'],
      removeWatcher: data['removeWatcher'],
      delete: data['delete'],
      logTime: data['logTime'],
      move: data['move'],
      copy: data['copy'],
      unwatch: data['unwatch'],
      update: data['update'],
      updateImmediately: data['updateImmediately'],
      watch: data['watch'],
      self: data['self'],
      schema: data['schema'],
      ancestors: data['ancestors'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      prepareAttachment: data['prepareAttachment'],
      author: data['author'],
      assignee: data['assignee'],
      availableWatchers: data['availableWatchers'],
      budget: data['budget'],
      category: data['category'],
      children: data['children'],
      addFileLink: data['addFileLink'],
      fileLinks: data['fileLinks'],
      parent: data['parent'],
      priority: data['priority'],
      project: data['project'],
      responsible: data['responsible'],
      relations: data['relations'],
      revisions: data['revisions'],
      status: data['status'],
      timeEntries: data['timeEntries'],
      type: data['type'],
      version: data['version'],
      watchers: data['watchers'],
    }));
});
