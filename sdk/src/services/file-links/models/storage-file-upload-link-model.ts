// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { StorageFileUploadLinkModelType, storageFileUploadLinkModelType } from './storage-file-upload-link-model-type';
import {
  StorageFileUploadLinkModelLinks,
  storageFileUploadLinkModelLinks,
  storageFileUploadLinkModelLinksRequest,
  storageFileUploadLinkModelLinksResponse,
} from './storage-file-upload-link-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const storageFileUploadLinkModel = z.lazy(() => {
  return z.object({
    _type: storageFileUploadLinkModelType,
    _links: storageFileUploadLinkModelLinks,
  });
});

/**
 *
 * @typedef  {StorageFileUploadLinkModel} storageFileUploadLinkModel
 * @property {StorageFileUploadLinkModelType}
 * @property {StorageFileUploadLinkModelLinks}
 */
export type StorageFileUploadLinkModel = z.infer<typeof storageFileUploadLinkModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const storageFileUploadLinkModelResponse = z.lazy(() => {
  return z
    .object({
      _type: storageFileUploadLinkModelType,
      _links: storageFileUploadLinkModelLinksResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const storageFileUploadLinkModelRequest = z.lazy(() => {
  return z
    .object({
      _type: storageFileUploadLinkModelType,
      _links: storageFileUploadLinkModelLinksRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      _links: data['_links'],
    }));
});
