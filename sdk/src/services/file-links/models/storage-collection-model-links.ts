// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf29, _linksSelf29, _linksSelf29Request, _linksSelf29Response } from './_links-self-29';

/**
 * The shape of the model inside the application code - what the users use
 */
export const storageCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf29,
  });
});

/**
 * 
 * @typedef  {StorageCollectionModelLinks} storageCollectionModelLinks   
 * @property {_LinksSelf29} - This storage collection

``Resource``: StorageCollectionReadModel
 */
export type StorageCollectionModelLinks = z.infer<typeof storageCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const storageCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf29Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const storageCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf29Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
