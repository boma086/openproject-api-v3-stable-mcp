// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf32, _linksSelf32, _linksSelf32Request, _linksSelf32Response } from './_links-self-32';

/**
 * The shape of the model inside the application code - what the users use
 */
export const storageFilesModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf32,
  });
});

/**
 * 
 * @typedef  {StorageFilesModelLinks} storageFilesModelLinks   
 * @property {_LinksSelf32} - Not provided

``Resource``: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
 */
export type StorageFilesModelLinks = z.infer<typeof storageFilesModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const storageFilesModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf32Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const storageFilesModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf32Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
