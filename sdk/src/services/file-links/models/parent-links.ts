// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf31, _linksSelf31, _linksSelf31Request, _linksSelf31Response } from './_links-self-31';

/**
 * The shape of the model inside the application code - what the users use
 */
export const parentLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf31,
  });
});

/**
 * 
 * @typedef  {ParentLinks} parentLinks   
 * @property {_LinksSelf31} - Not provided

``Resource``: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
 */
export type ParentLinks = z.infer<typeof parentLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const parentLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf31Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const parentLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf31Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
