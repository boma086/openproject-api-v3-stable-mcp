// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf21, _linksSelf21, _linksSelf21Request, _linksSelf21Response } from './_links-self-21';
import { _LinksProject4, _linksProject4, _linksProject4Request, _linksProject4Response } from './_links-project-4';
import {
  _LinksAttachments3,
  _linksAttachments3,
  _linksAttachments3Request,
  _linksAttachments3Response,
} from './_links-attachments-3';

/**
 * The shape of the model inside the application code - what the users use
 */
export const documentModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf21,
    project: _linksProject4,
    attachments: _linksAttachments3,
  });
});

/**
 * 
 * @typedef  {DocumentModelLinks} documentModelLinks   
 * @property {_LinksSelf21} - This document

``Resource``: Document
 * @property {_LinksProject4} - The project the document is in

``Resource``: Project
 * @property {_LinksAttachments3} - The attachments belonging to the document

``Resource``: []Attachment
 */
export type DocumentModelLinks = z.infer<typeof documentModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const documentModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf21Response,
      project: _linksProject4Response,
      attachments: _linksAttachments3Response,
    })
    .transform((data) => ({
      self: data['self'],
      project: data['project'],
      attachments: data['attachments'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const documentModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf21Request,
      project: _linksProject4Request,
      attachments: _linksAttachments3Request,
    })
    .transform((data) => ({
      self: data['self'],
      project: data['project'],
      attachments: data['attachments'],
    }));
});
