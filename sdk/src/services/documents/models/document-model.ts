// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  DocumentModelLinks,
  documentModelLinks,
  documentModelLinksRequest,
  documentModelLinksResponse,
} from './document-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const documentModel = z.lazy(() => {
  return z.object({
    id: z.number().optional(),
    title: z.string().optional(),
    description: z.string().optional(),
    createdAt: z.string().optional(),
    _links: documentModelLinks.optional(),
  });
});

/**
 *
 * @typedef  {DocumentModel} documentModel
 * @property {number} - Document's id
 * @property {string} - The title chosen for the collection of documents
 * @property {string} - A text describing the documents
 * @property {string} - The time the document was created at
 * @property {DocumentModelLinks}
 */
export type DocumentModel = z.infer<typeof documentModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const documentModelResponse = z.lazy(() => {
  return z
    .object({
      id: z.number().optional(),
      title: z.string().optional(),
      description: z.string().optional(),
      createdAt: z.string().optional(),
      _links: documentModelLinksResponse.optional(),
    })
    .transform((data) => ({
      id: data['id'],
      title: data['title'],
      description: data['description'],
      createdAt: data['createdAt'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const documentModelRequest = z.lazy(() => {
  return z
    .object({
      id: z.number().optional(),
      title: z.string().optional(),
      description: z.string().optional(),
      createdAt: z.string().optional(),
      _links: documentModelLinksRequest.optional(),
    })
    .transform((data) => ({
      id: data['id'],
      title: data['title'],
      description: data['description'],
      createdAt: data['createdAt'],
      _links: data['_links'],
    }));
});
