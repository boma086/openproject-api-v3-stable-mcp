// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf43, _linksSelf43, _linksSelf43Request, _linksSelf43Response } from './_links-self-43';

/**
 * The shape of the model inside the application code - what the users use
 */
export const membershipSchemaModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf43.optional(),
  });
});

/**
 * 
 * @typedef  {MembershipSchemaModelLinks} membershipSchemaModelLinks   
 * @property {_LinksSelf43} - This schema

``Resource``: Schema
 */
export type MembershipSchemaModelLinks = z.infer<typeof membershipSchemaModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipSchemaModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf43Response.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipSchemaModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf43Request.optional(),
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
