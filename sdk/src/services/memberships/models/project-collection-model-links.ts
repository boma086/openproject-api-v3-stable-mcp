// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf42, _linksSelf42, _linksSelf42Request, _linksSelf42Response } from './_links-self-42';
import { _LinksJumpTo3, _linksJumpTo3, _linksJumpTo3Request, _linksJumpTo3Response } from './_links-jump-to-3';
import {
  _LinksChangeSize3,
  _linksChangeSize3,
  _linksChangeSize3Request,
  _linksChangeSize3Response,
} from './_links-change-size-3';
import {
  _LinksPreviousByOffset,
  _linksPreviousByOffset,
  _linksPreviousByOffsetRequest,
  _linksPreviousByOffsetResponse,
} from './_links-previous-by-offset';
import {
  _LinksNextByOffset,
  _linksNextByOffset,
  _linksNextByOffsetRequest,
  _linksNextByOffsetResponse,
} from './_links-next-by-offset';
import { Representations, representations, representationsRequest, representationsResponse } from './representations';

/**
 * The shape of the model inside the application code - what the users use
 */
export const projectCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf42,
    jumpTo: _linksJumpTo3,
    changeSize: _linksChangeSize3,
    previousByOffset: _linksPreviousByOffset.optional(),
    nextByOffset: _linksNextByOffset.optional(),
    representations: z.array(representations).optional(),
  });
});

/**
 * 
 * @typedef  {ProjectCollectionModelLinks} projectCollectionModelLinks   
 * @property {_LinksSelf42} - This collection resource.

``Resource``: Collection
 * @property {_LinksJumpTo3} - A templated link to jump to a given offset.
 * @property {_LinksChangeSize3} - A templated link to change the current page size.
 * @property {_LinksPreviousByOffset} - A link to the previous page of the collection.

# Conditions
- The collection is not on the first page.
 * @property {_LinksNextByOffset} - A link to the next page of the collection.

# Conditions
- The collection is not on the last page.
 * @property {Representations[]} 
 */
export type ProjectCollectionModelLinks = z.infer<typeof projectCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const projectCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf42Response,
      jumpTo: _linksJumpTo3Response,
      changeSize: _linksChangeSize3Response,
      previousByOffset: _linksPreviousByOffsetResponse.optional(),
      nextByOffset: _linksNextByOffsetResponse.optional(),
      representations: z.array(representationsResponse).optional(),
    })
    .transform((data) => ({
      self: data['self'],
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
      previousByOffset: data['previousByOffset'],
      nextByOffset: data['nextByOffset'],
      representations: data['representations'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const projectCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf42Request,
      jumpTo: _linksJumpTo3Request,
      changeSize: _linksChangeSize3Request,
      previousByOffset: _linksPreviousByOffsetRequest.optional(),
      nextByOffset: _linksNextByOffsetRequest.optional(),
      representations: z.array(representationsRequest).optional(),
    })
    .transform((data) => ({
      self: data['self'],
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
      previousByOffset: data['previousByOffset'],
      nextByOffset: data['nextByOffset'],
      representations: data['representations'],
    }));
});
