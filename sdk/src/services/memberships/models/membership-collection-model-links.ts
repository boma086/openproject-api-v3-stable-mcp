// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksJumpTo2, _linksJumpTo2, _linksJumpTo2Request, _linksJumpTo2Response } from './_links-jump-to-2';
import {
  _LinksChangeSize2,
  _linksChangeSize2,
  _linksChangeSize2Request,
  _linksChangeSize2Response,
} from './_links-change-size-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const membershipCollectionModelLinks = z.lazy(() => {
  return z.object({
    jumpTo: _linksJumpTo2,
    changeSize: _linksChangeSize2,
  });
});

/**
 * 
 * @typedef  {MembershipCollectionModelLinks} membershipCollectionModelLinks   
 * @property {_LinksJumpTo2} - Templated link to another page offset.

``Resource``: Collection
 * @property {_LinksChangeSize2} - Templated link for another page size.

``Resource``: Collection
 */
export type MembershipCollectionModelLinks = z.infer<typeof membershipCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      jumpTo: _linksJumpTo2Response,
      changeSize: _linksChangeSize2Response,
    })
    .transform((data) => ({
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      jumpTo: _linksJumpTo2Request,
      changeSize: _linksChangeSize2Request,
    })
    .transform((data) => ({
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});
