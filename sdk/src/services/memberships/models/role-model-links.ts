// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf40, _linksSelf40, _linksSelf40Request, _linksSelf40Response } from './_links-self-40';

/**
 * The shape of the model inside the application code - what the users use
 */
export const roleModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf40,
  });
});

/**
 * 
 * @typedef  {RoleModelLinks} roleModelLinks   
 * @property {_LinksSelf40} - This role

``Resource``: Role
 */
export type RoleModelLinks = z.infer<typeof roleModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const roleModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf40Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const roleModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf40Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
