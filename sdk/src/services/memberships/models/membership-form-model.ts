// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { MembershipFormModelType, membershipFormModelType } from './membership-form-model-type';
import {
  MembershipFormModelEmbedded,
  membershipFormModelEmbedded,
  membershipFormModelEmbeddedRequest,
  membershipFormModelEmbeddedResponse,
} from './membership-form-model-embedded';
import {
  MembershipFormModelLinks,
  membershipFormModelLinks,
  membershipFormModelLinksRequest,
  membershipFormModelLinksResponse,
} from './membership-form-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const membershipFormModel = z.lazy(() => {
  return z.object({
    _type: membershipFormModelType,
    _embedded: membershipFormModelEmbedded,
    _links: membershipFormModelLinks,
  });
});

/**
 *
 * @typedef  {MembershipFormModel} membershipFormModel
 * @property {MembershipFormModelType}
 * @property {MembershipFormModelEmbedded}
 * @property {MembershipFormModelLinks}
 */
export type MembershipFormModel = z.infer<typeof membershipFormModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipFormModelResponse = z.lazy(() => {
  return z
    .object({
      _type: membershipFormModelType,
      _embedded: membershipFormModelEmbeddedResponse,
      _links: membershipFormModelLinksResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      _embedded: data['_embedded'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const membershipFormModelRequest = z.lazy(() => {
  return z
    .object({
      _type: membershipFormModelType,
      _embedded: membershipFormModelEmbeddedRequest,
      _links: membershipFormModelLinksRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      _embedded: data['_embedded'],
      _links: data['_links'],
    }));
});
