// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf52, _linksSelf52, _linksSelf52Request, _linksSelf52Response } from './_links-self-52';

/**
 * The shape of the model inside the application code - what the users use
 */
export const listAvailableParentProjectCandidatesModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf52,
  });
});

/**
 * 
 * @typedef  {ListAvailableParentProjectCandidatesModelLinks} listAvailableParentProjectCandidatesModelLinks   
 * @property {_LinksSelf52} - The project collection

``Resource``: ProjectCollection
 */
export type ListAvailableParentProjectCandidatesModelLinks = z.infer<
  typeof listAvailableParentProjectCandidatesModelLinks
>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const listAvailableParentProjectCandidatesModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf52Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const listAvailableParentProjectCandidatesModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf52Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
