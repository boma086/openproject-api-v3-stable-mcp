// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf14, _linksSelf14, _linksSelf14Request, _linksSelf14Response } from './_links-self-14';

/**
 * The shape of the model inside the application code - what the users use
 */
export const hierarchyItemCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf14,
  });
});

/**
 * 
 * @typedef  {HierarchyItemCollectionModelLinks} hierarchyItemCollectionModelLinks   
 * @property {_LinksSelf14} - This hierarchy item collection

``Resource``: HierarchyItemCollectionModel
 */
export type HierarchyItemCollectionModelLinks = z.infer<typeof hierarchyItemCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const hierarchyItemCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf14Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const hierarchyItemCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf14Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
