// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksDelete3, _linksDelete3, _linksDelete3Request, _linksDelete3Response } from './_links-delete-3';
import { _LinksSelf7, _linksSelf7, _linksSelf7Request, _linksSelf7Response } from './_links-self-7';
import {
  _LinksContainer2,
  _linksContainer2,
  _linksContainer2Request,
  _linksContainer2Response,
} from './_links-container-2';
import { _LinksAuthor3, _linksAuthor3, _linksAuthor3Request, _linksAuthor3Response } from './_links-author-3';
import {
  _LinksDownloadLocation2,
  _linksDownloadLocation2,
  _linksDownloadLocation2Request,
  _linksDownloadLocation2Response,
} from './_links-download-location-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const elementsLinks2 = z.lazy(() => {
  return z.object({
    delete: _linksDelete3.optional(),
    self: _linksSelf7,
    container: _linksContainer2,
    author: _linksAuthor3,
    downloadLocation: _linksDownloadLocation2,
  });
});

/**
 * 
 * @typedef  {ElementsLinks2} elementsLinks2   
 * @property {_LinksDelete3} - Deletes this attachment

# Conditions

``Permission``: edit on attachment container or being the author for attachments without container
 * @property {_LinksSelf7} - This attachment

``Resource``: Attachment
 * @property {_LinksContainer2} - The object (e.g. WorkPackage) housing the attachment

``Resource``: Anything
 * @property {_LinksAuthor3} - The user who uploaded the attachment

``Resource``: User
 * @property {_LinksDownloadLocation2} - Direct download link to the attachment

``Resource``: -
 */
export type ElementsLinks2 = z.infer<typeof elementsLinks2>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks2Response = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete3Response.optional(),
      self: _linksSelf7Response,
      container: _linksContainer2Response,
      author: _linksAuthor3Response,
      downloadLocation: _linksDownloadLocation2Response,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks2Request = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete3Request.optional(),
      self: _linksSelf7Request,
      container: _linksContainer2Request,
      author: _linksAuthor3Request,
      downloadLocation: _linksDownloadLocation2Request,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});
