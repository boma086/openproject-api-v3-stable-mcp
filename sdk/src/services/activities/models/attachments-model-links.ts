// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf6, _linksSelf6, _linksSelf6Request, _linksSelf6Response } from './_links-self-6';

/**
 * The shape of the model inside the application code - what the users use
 */
export const attachmentsModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf6,
  });
});

/**
 * 
 * @typedef  {AttachmentsModelLinks} attachmentsModelLinks   
 * @property {_LinksSelf6} - The attachments collection

``Resource``: AttachmentsCollection
 */
export type AttachmentsModelLinks = z.infer<typeof attachmentsModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentsModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf6Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentsModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf6Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
