// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _LinksAddComment1,
  _linksAddComment1,
  _linksAddComment1Request,
  _linksAddComment1Response,
} from './_links-add-comment-1';
import {
  _LinksAddRelation1,
  _linksAddRelation1,
  _linksAddRelation1Request,
  _linksAddRelation1Response,
} from './_links-add-relation-1';
import {
  _LinksAddWatcher1,
  _linksAddWatcher1,
  _linksAddWatcher1Request,
  _linksAddWatcher1Response,
} from './_links-add-watcher-1';
import {
  _LinksCustomActions1,
  _linksCustomActions1,
  _linksCustomActions1Request,
  _linksCustomActions1Response,
} from './_links-custom-actions-1';
import {
  _LinksPreviewMarkup1,
  _linksPreviewMarkup1,
  _linksPreviewMarkup1Request,
  _linksPreviewMarkup1Response,
} from './_links-preview-markup-1';
import {
  _LinksRemoveWatcher1,
  _linksRemoveWatcher1,
  _linksRemoveWatcher1Request,
  _linksRemoveWatcher1Response,
} from './_links-remove-watcher-1';
import { _LinksDelete2, _linksDelete2, _linksDelete2Request, _linksDelete2Response } from './_links-delete-2';
import { _LinksLogTime1, _linksLogTime1, _linksLogTime1Request, _linksLogTime1Response } from './_links-log-time-1';
import { _LinksMove1, _linksMove1, _linksMove1Request, _linksMove1Response } from './_links-move-1';
import { _LinksCopy1, _linksCopy1, _linksCopy1Request, _linksCopy1Response } from './_links-copy-1';
import { _LinksUnwatch1, _linksUnwatch1, _linksUnwatch1Request, _linksUnwatch1Response } from './_links-unwatch-1';
import { _LinksUpdate1, _linksUpdate1, _linksUpdate1Request, _linksUpdate1Response } from './_links-update-1';
import {
  _LinksUpdateImmediately1,
  _linksUpdateImmediately1,
  _linksUpdateImmediately1Request,
  _linksUpdateImmediately1Response,
} from './_links-update-immediately-1';
import { _LinksWatch1, _linksWatch1, _linksWatch1Request, _linksWatch1Response } from './_links-watch-1';
import { _LinksSelf4, _linksSelf4, _linksSelf4Request, _linksSelf4Response } from './_links-self-4';
import { _LinksSchema1, _linksSchema1, _linksSchema1Request, _linksSchema1Response } from './_links-schema-1';
import {
  _LinksAncestors1,
  _linksAncestors1,
  _linksAncestors1Request,
  _linksAncestors1Response,
} from './_links-ancestors-1';
import {
  _LinksAttachments1,
  _linksAttachments1,
  _linksAttachments1Request,
  _linksAttachments1Response,
} from './_links-attachments-1';
import {
  _LinksAddAttachment1,
  _linksAddAttachment1,
  _linksAddAttachment1Request,
  _linksAddAttachment1Response,
} from './_links-add-attachment-1';
import {
  _LinksPrepareAttachment1,
  _linksPrepareAttachment1,
  _linksPrepareAttachment1Request,
  _linksPrepareAttachment1Response,
} from './_links-prepare-attachment-1';
import { _LinksAuthor2, _linksAuthor2, _linksAuthor2Request, _linksAuthor2Response } from './_links-author-2';
import { _LinksAssignee1, _linksAssignee1, _linksAssignee1Request, _linksAssignee1Response } from './_links-assignee-1';
import {
  _LinksAvailableWatchers1,
  _linksAvailableWatchers1,
  _linksAvailableWatchers1Request,
  _linksAvailableWatchers1Response,
} from './_links-available-watchers-1';
import { _LinksBudget1, _linksBudget1, _linksBudget1Request, _linksBudget1Response } from './_links-budget-1';
import { _LinksCategory1, _linksCategory1, _linksCategory1Request, _linksCategory1Response } from './_links-category-1';
import { _LinksChildren1, _linksChildren1, _linksChildren1Request, _linksChildren1Response } from './_links-children-1';
import {
  _LinksAddFileLink1,
  _linksAddFileLink1,
  _linksAddFileLink1Request,
  _linksAddFileLink1Response,
} from './_links-add-file-link-1';
import {
  _LinksFileLinks1,
  _linksFileLinks1,
  _linksFileLinks1Request,
  _linksFileLinks1Response,
} from './_links-file-links-1';
import { _LinksParent1, _linksParent1, _linksParent1Request, _linksParent1Response } from './_links-parent-1';
import { _LinksPriority1, _linksPriority1, _linksPriority1Request, _linksPriority1Response } from './_links-priority-1';
import { _LinksProject1, _linksProject1, _linksProject1Request, _linksProject1Response } from './_links-project-1';
import {
  _LinksResponsible1,
  _linksResponsible1,
  _linksResponsible1Request,
  _linksResponsible1Response,
} from './_links-responsible-1';
import {
  _LinksRelations2,
  _linksRelations2,
  _linksRelations2Request,
  _linksRelations2Response,
} from './_links-relations-2';
import {
  _LinksRevisions1,
  _linksRevisions1,
  _linksRevisions1Request,
  _linksRevisions1Response,
} from './_links-revisions-1';
import { _LinksStatus1, _linksStatus1, _linksStatus1Request, _linksStatus1Response } from './_links-status-1';
import {
  _LinksTimeEntries2,
  _linksTimeEntries2,
  _linksTimeEntries2Request,
  _linksTimeEntries2Response,
} from './_links-time-entries-2';
import { _LinksType1, _linksType1, _linksType1Request, _linksType1Response } from './_links-type-1';
import { _LinksVersion1, _linksVersion1, _linksVersion1Request, _linksVersion1Response } from './_links-version-1';
import { _LinksWatchers1, _linksWatchers1, _linksWatchers1Request, _linksWatchers1Response } from './_links-watchers-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const workPackageLinks = z.lazy(() => {
  return z.object({
    addComment: _linksAddComment1.optional(),
    addRelation: _linksAddRelation1.optional(),
    addWatcher: _linksAddWatcher1.optional(),
    customActions: z.array(_linksCustomActions1).optional(),
    previewMarkup: _linksPreviewMarkup1.optional(),
    removeWatcher: _linksRemoveWatcher1.optional(),
    delete: _linksDelete2.optional(),
    logTime: _linksLogTime1.optional(),
    move: _linksMove1.optional(),
    copy: _linksCopy1.optional(),
    unwatch: _linksUnwatch1.optional(),
    update: _linksUpdate1.optional(),
    updateImmediately: _linksUpdateImmediately1.optional(),
    watch: _linksWatch1.optional(),
    self: _linksSelf4,
    schema: _linksSchema1,
    ancestors: z.array(_linksAncestors1),
    attachments: _linksAttachments1,
    addAttachment: _linksAddAttachment1.optional(),
    prepareAttachment: _linksPrepareAttachment1.optional(),
    author: _linksAuthor2,
    assignee: _linksAssignee1.optional(),
    availableWatchers: _linksAvailableWatchers1.optional(),
    budget: _linksBudget1.optional(),
    category: _linksCategory1.optional(),
    children: z.array(_linksChildren1),
    addFileLink: _linksAddFileLink1.optional(),
    fileLinks: _linksFileLinks1.optional(),
    parent: _linksParent1.optional(),
    priority: _linksPriority1,
    project: _linksProject1,
    responsible: _linksResponsible1.optional(),
    relations: _linksRelations2.optional(),
    revisions: _linksRevisions1.optional(),
    status: _linksStatus1,
    timeEntries: _linksTimeEntries2.optional(),
    type: _linksType1,
    version: _linksVersion1.optional(),
    watchers: _linksWatchers1.optional(),
  });
});

/**
 * 
 * @typedef  {WorkPackageLinks} workPackageLinks   
 * @property {_LinksAddComment1} - Post comment to WP

# Conditions

``Permission``: add work package notes
 * @property {_LinksAddRelation1} - Adds a relation to this work package.

# Conditions

``Permission``: manage wp relations
 * @property {_LinksAddWatcher1} - Add any user to WP watchers

# Conditions

``Permission``: add watcher
 * @property {_LinksCustomActions1[]} 
 * @property {_LinksPreviewMarkup1} - Post markup (in markdown) here to receive an HTML-rendered response
 * @property {_LinksRemoveWatcher1} - Remove any user from WP watchers

# Conditions

``Permission``: delete watcher
 * @property {_LinksDelete2} - Delete this work package

# Conditions

``Permission``: delete_work_packages
 * @property {_LinksLogTime1} - Create time entries on the work package

# Conditions

``Permission``: log_time or log_own_time
 * @property {_LinksMove1} - Link to page for moving this work package

# Conditions

``Permission``: move_work_packages
 * @property {_LinksCopy1} - Link to page for copying this work package

# Conditions

``Permission``: add_work_packages
 * @property {_LinksUnwatch1} - Remove current user from WP watchers

# Conditions

logged in; watching
 * @property {_LinksUpdate1} - Form endpoint that aids in preparing and performing edits on a work package

# Conditions

``Permission``: edit work package
 * @property {_LinksUpdateImmediately1} - Directly perform edits on a work package

# Conditions

``Permission``: edit work package
 * @property {_LinksWatch1} - Add current user to WP watchers

# Conditions

logged in; not watching
 * @property {_LinksSelf4} - This work package

``Resource``: WorkPackage
 * @property {_LinksSchema1} - The schema of this work package

``Resource``: Schema
 * @property {_LinksAncestors1[]} 
 * @property {_LinksAttachments1} - The files attached to this work package

``Resource``: Collection

# Conditions

- ``Setting``: deactivate_work_package_attachments set to false in related project
 * @property {_LinksAddAttachment1} - Attach a file to the work package

# Conditions

- ``Permission``: edit work package
 * @property {_LinksPrepareAttachment1} - Attach a file to the work package

# Conditions

- ``Setting``: direct uploads enabled
 * @property {_LinksAuthor2} - The person that created the work package

``Resource``: User
 * @property {_LinksAssignee1} - The person that is intended to work on the work package

``Resource``: User
 * @property {_LinksAvailableWatchers1} - All users that can be added to the work package as watchers.

``Resource``: User

# Conditions

``Permission`` add work package watchers
 * @property {_LinksBudget1} - The budget this work package is associated to

``Resource``: Budget

# Conditions

``Permission`` view cost objects
 * @property {_LinksCategory1} - The category of the work package

``Resource``: Category
 * @property {_LinksChildren1[]} 
 * @property {_LinksAddFileLink1} - Add a file link to the work package

# Conditions

``Permission``: manage_file_links
 * @property {_LinksFileLinks1} - Gets the file link collection of this work package

# Conditions

``Permission``: view_file_links
 * @property {_LinksParent1} - Parent work package

``Resource``: WorkPackage
 * @property {_LinksPriority1} - The priority of the work package

``Resource``: Priority
 * @property {_LinksProject1} - The project to which the work package belongs

``Resource``: Project
 * @property {_LinksResponsible1} - The person that is responsible for the overall outcome

``Resource``: User
 * @property {_LinksRelations2} - Relations this work package is involved in

``Resource``: Relation

# Conditions

``Permission`` view work packages
 * @property {_LinksRevisions1} - Revisions that are referencing the work package

``Resource``: Revision

# Conditions

``Permission`` view changesets
 * @property {_LinksStatus1} - The current status of the work package

``Resource``: Status
 * @property {_LinksTimeEntries2} - All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.

``Resource``: N/A

# Conditions

``Permission`` view time entries
 * @property {_LinksType1} - The type of the work package

``Resource``: Type
 * @property {_LinksVersion1} - The version associated to the work package

``Resource``: Version
 * @property {_LinksWatchers1} - All users that are currently watching this work package

``Resource``: Collection

# Conditions

``Permission`` view work package watchers
 */
export type WorkPackageLinks = z.infer<typeof workPackageLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageLinksResponse = z.lazy(() => {
  return z
    .object({
      addComment: _linksAddComment1Response.optional(),
      addRelation: _linksAddRelation1Response.optional(),
      addWatcher: _linksAddWatcher1Response.optional(),
      customActions: z.array(_linksCustomActions1Response).optional(),
      previewMarkup: _linksPreviewMarkup1Response.optional(),
      removeWatcher: _linksRemoveWatcher1Response.optional(),
      delete: _linksDelete2Response.optional(),
      logTime: _linksLogTime1Response.optional(),
      move: _linksMove1Response.optional(),
      copy: _linksCopy1Response.optional(),
      unwatch: _linksUnwatch1Response.optional(),
      update: _linksUpdate1Response.optional(),
      updateImmediately: _linksUpdateImmediately1Response.optional(),
      watch: _linksWatch1Response.optional(),
      self: _linksSelf4Response,
      schema: _linksSchema1Response,
      ancestors: z.array(_linksAncestors1Response),
      attachments: _linksAttachments1Response,
      addAttachment: _linksAddAttachment1Response.optional(),
      prepareAttachment: _linksPrepareAttachment1Response.optional(),
      author: _linksAuthor2Response,
      assignee: _linksAssignee1Response.optional(),
      availableWatchers: _linksAvailableWatchers1Response.optional(),
      budget: _linksBudget1Response.optional(),
      category: _linksCategory1Response.optional(),
      children: z.array(_linksChildren1Response),
      addFileLink: _linksAddFileLink1Response.optional(),
      fileLinks: _linksFileLinks1Response.optional(),
      parent: _linksParent1Response.optional(),
      priority: _linksPriority1Response,
      project: _linksProject1Response,
      responsible: _linksResponsible1Response.optional(),
      relations: _linksRelations2Response.optional(),
      revisions: _linksRevisions1Response.optional(),
      status: _linksStatus1Response,
      timeEntries: _linksTimeEntries2Response.optional(),
      type: _linksType1Response,
      version: _linksVersion1Response.optional(),
      watchers: _linksWatchers1Response.optional(),
    })
    .transform((data) => ({
      addComment: data['addComment'],
      addRelation: data['addRelation'],
      addWatcher: data['addWatcher'],
      customActions: data['customActions'],
      previewMarkup: data['previewMarkup'],
      removeWatcher: data['removeWatcher'],
      delete: data['delete'],
      logTime: data['logTime'],
      move: data['move'],
      copy: data['copy'],
      unwatch: data['unwatch'],
      update: data['update'],
      updateImmediately: data['updateImmediately'],
      watch: data['watch'],
      self: data['self'],
      schema: data['schema'],
      ancestors: data['ancestors'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      prepareAttachment: data['prepareAttachment'],
      author: data['author'],
      assignee: data['assignee'],
      availableWatchers: data['availableWatchers'],
      budget: data['budget'],
      category: data['category'],
      children: data['children'],
      addFileLink: data['addFileLink'],
      fileLinks: data['fileLinks'],
      parent: data['parent'],
      priority: data['priority'],
      project: data['project'],
      responsible: data['responsible'],
      relations: data['relations'],
      revisions: data['revisions'],
      status: data['status'],
      timeEntries: data['timeEntries'],
      type: data['type'],
      version: data['version'],
      watchers: data['watchers'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const workPackageLinksRequest = z.lazy(() => {
  return z
    .object({
      addComment: _linksAddComment1Request.optional(),
      addRelation: _linksAddRelation1Request.optional(),
      addWatcher: _linksAddWatcher1Request.optional(),
      customActions: z.array(_linksCustomActions1Request).optional(),
      previewMarkup: _linksPreviewMarkup1Request.optional(),
      removeWatcher: _linksRemoveWatcher1Request.optional(),
      delete: _linksDelete2Request.optional(),
      logTime: _linksLogTime1Request.optional(),
      move: _linksMove1Request.optional(),
      copy: _linksCopy1Request.optional(),
      unwatch: _linksUnwatch1Request.optional(),
      update: _linksUpdate1Request.optional(),
      updateImmediately: _linksUpdateImmediately1Request.optional(),
      watch: _linksWatch1Request.optional(),
      self: _linksSelf4Request,
      schema: _linksSchema1Request,
      ancestors: z.array(_linksAncestors1Request),
      attachments: _linksAttachments1Request,
      addAttachment: _linksAddAttachment1Request.optional(),
      prepareAttachment: _linksPrepareAttachment1Request.optional(),
      author: _linksAuthor2Request,
      assignee: _linksAssignee1Request.optional(),
      availableWatchers: _linksAvailableWatchers1Request.optional(),
      budget: _linksBudget1Request.optional(),
      category: _linksCategory1Request.optional(),
      children: z.array(_linksChildren1Request),
      addFileLink: _linksAddFileLink1Request.optional(),
      fileLinks: _linksFileLinks1Request.optional(),
      parent: _linksParent1Request.optional(),
      priority: _linksPriority1Request,
      project: _linksProject1Request,
      responsible: _linksResponsible1Request.optional(),
      relations: _linksRelations2Request.optional(),
      revisions: _linksRevisions1Request.optional(),
      status: _linksStatus1Request,
      timeEntries: _linksTimeEntries2Request.optional(),
      type: _linksType1Request,
      version: _linksVersion1Request.optional(),
      watchers: _linksWatchers1Request.optional(),
    })
    .transform((data) => ({
      addComment: data['addComment'],
      addRelation: data['addRelation'],
      addWatcher: data['addWatcher'],
      customActions: data['customActions'],
      previewMarkup: data['previewMarkup'],
      removeWatcher: data['removeWatcher'],
      delete: data['delete'],
      logTime: data['logTime'],
      move: data['move'],
      copy: data['copy'],
      unwatch: data['unwatch'],
      update: data['update'],
      updateImmediately: data['updateImmediately'],
      watch: data['watch'],
      self: data['self'],
      schema: data['schema'],
      ancestors: data['ancestors'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      prepareAttachment: data['prepareAttachment'],
      author: data['author'],
      assignee: data['assignee'],
      availableWatchers: data['availableWatchers'],
      budget: data['budget'],
      category: data['category'],
      children: data['children'],
      addFileLink: data['addFileLink'],
      fileLinks: data['fileLinks'],
      parent: data['parent'],
      priority: data['priority'],
      project: data['project'],
      responsible: data['responsible'],
      relations: data['relations'],
      revisions: data['revisions'],
      status: data['status'],
      timeEntries: data['timeEntries'],
      type: data['type'],
      version: data['version'],
      watchers: data['watchers'],
    }));
});
