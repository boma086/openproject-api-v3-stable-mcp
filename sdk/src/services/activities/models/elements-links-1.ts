// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksDelete1, _linksDelete1, _linksDelete1Request, _linksDelete1Response } from './_links-delete-1';
import { _LinksSelf3, _linksSelf3, _linksSelf3Request, _linksSelf3Response } from './_links-self-3';
import {
  _LinksContainer1,
  _linksContainer1,
  _linksContainer1Request,
  _linksContainer1Response,
} from './_links-container-1';
import { _LinksAuthor1, _linksAuthor1, _linksAuthor1Request, _linksAuthor1Response } from './_links-author-1';
import {
  _LinksDownloadLocation1,
  _linksDownloadLocation1,
  _linksDownloadLocation1Request,
  _linksDownloadLocation1Response,
} from './_links-download-location-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const elementsLinks1 = z.lazy(() => {
  return z.object({
    delete: _linksDelete1.optional(),
    self: _linksSelf3,
    container: _linksContainer1,
    author: _linksAuthor1,
    downloadLocation: _linksDownloadLocation1,
  });
});

/**
 * 
 * @typedef  {ElementsLinks1} elementsLinks1   
 * @property {_LinksDelete1} - Deletes this attachment

# Conditions

``Permission``: edit on attachment container or being the author for attachments without container
 * @property {_LinksSelf3} - This attachment

``Resource``: Attachment
 * @property {_LinksContainer1} - The object (e.g. WorkPackage) housing the attachment

``Resource``: Anything
 * @property {_LinksAuthor1} - The user who uploaded the attachment

``Resource``: User
 * @property {_LinksDownloadLocation1} - Direct download link to the attachment

``Resource``: -
 */
export type ElementsLinks1 = z.infer<typeof elementsLinks1>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks1Response = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete1Response.optional(),
      self: _linksSelf3Response,
      container: _linksContainer1Response,
      author: _linksAuthor1Response,
      downloadLocation: _linksDownloadLocation1Response,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const elementsLinks1Request = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete1Request.optional(),
      self: _linksSelf3Request,
      container: _linksContainer1Request,
      author: _linksAuthor1Request,
      downloadLocation: _linksDownloadLocation1Request,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});
