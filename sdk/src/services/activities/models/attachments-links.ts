// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf2, _linksSelf2, _linksSelf2Request, _linksSelf2Response } from './_links-self-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const attachmentsLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf2,
  });
});

/**
 * 
 * @typedef  {AttachmentsLinks} attachmentsLinks   
 * @property {_LinksSelf2} - The attachments collection

``Resource``: AttachmentsCollection
 */
export type AttachmentsLinks = z.infer<typeof attachmentsLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentsLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf2Response,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentsLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf2Request,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
