// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksDelete4, _linksDelete4, _linksDelete4Request, _linksDelete4Response } from './_links-delete-4';
import { _LinksSelf8, _linksSelf8, _linksSelf8Request, _linksSelf8Response } from './_links-self-8';
import {
  _LinksContainer3,
  _linksContainer3,
  _linksContainer3Request,
  _linksContainer3Response,
} from './_links-container-3';
import { _LinksAuthor4, _linksAuthor4, _linksAuthor4Request, _linksAuthor4Response } from './_links-author-4';
import {
  _LinksDownloadLocation3,
  _linksDownloadLocation3,
  _linksDownloadLocation3Request,
  _linksDownloadLocation3Response,
} from './_links-download-location-3';

/**
 * The shape of the model inside the application code - what the users use
 */
export const attachmentModelLinks = z.lazy(() => {
  return z.object({
    delete: _linksDelete4.optional(),
    self: _linksSelf8,
    container: _linksContainer3,
    author: _linksAuthor4,
    downloadLocation: _linksDownloadLocation3,
  });
});

/**
 * 
 * @typedef  {AttachmentModelLinks} attachmentModelLinks   
 * @property {_LinksDelete4} - Deletes this attachment

# Conditions

``Permission``: edit on attachment container or being the author for attachments without container
 * @property {_LinksSelf8} - This attachment

``Resource``: Attachment
 * @property {_LinksContainer3} - The object (e.g. WorkPackage) housing the attachment

``Resource``: Anything
 * @property {_LinksAuthor4} - The user who uploaded the attachment

``Resource``: User
 * @property {_LinksDownloadLocation3} - Direct download link to the attachment

``Resource``: -
 */
export type AttachmentModelLinks = z.infer<typeof attachmentModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentModelLinksResponse = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete4Response.optional(),
      self: _linksSelf8Response,
      container: _linksContainer3Response,
      author: _linksAuthor4Response,
      downloadLocation: _linksDownloadLocation3Response,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const attachmentModelLinksRequest = z.lazy(() => {
  return z
    .object({
      delete: _linksDelete4Request.optional(),
      self: _linksSelf8Request,
      container: _linksContainer3Request,
      author: _linksAuthor4Request,
      downloadLocation: _linksDownloadLocation3Request,
    })
    .transform((data) => ({
      delete: data['delete'],
      self: data['self'],
      container: data['container'],
      author: data['author'],
      downloadLocation: data['downloadLocation'],
    }));
});
