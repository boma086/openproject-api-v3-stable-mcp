// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _LinksAddAttachment7,
  _linksAddAttachment7,
  _linksAddAttachment7Request,
  _linksAddAttachment7Response,
} from './_links-add-attachment-7';

/**
 * The shape of the model inside the application code - what the users use
 */
export const postModelLinks = z.lazy(() => {
  return z.object({
    addAttachment: _linksAddAttachment7.optional(),
  });
});

/**
 * 
 * @typedef  {PostModelLinks} postModelLinks   
 * @property {_LinksAddAttachment7} - Attach a file to the post

# Conditions

``Permission``: edit messages
 */
export type PostModelLinks = z.infer<typeof postModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const postModelLinksResponse = z.lazy(() => {
  return z
    .object({
      addAttachment: _linksAddAttachment7Response.optional(),
    })
    .transform((data) => ({
      addAttachment: data['addAttachment'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const postModelLinksRequest = z.lazy(() => {
  return z
    .object({
      addAttachment: _linksAddAttachment7Request.optional(),
    })
    .transform((data) => ({
      addAttachment: data['addAttachment'],
    }));
});
