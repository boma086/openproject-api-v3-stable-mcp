// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { TimeEntryActivityModelType, timeEntryActivityModelType } from './time-entry-activity-model-type';
import {
  TimeEntryActivityModelEmbedded,
  timeEntryActivityModelEmbedded,
  timeEntryActivityModelEmbeddedRequest,
  timeEntryActivityModelEmbeddedResponse,
} from './time-entry-activity-model-embedded';
import {
  TimeEntryActivityModelLinks,
  timeEntryActivityModelLinks,
  timeEntryActivityModelLinksRequest,
  timeEntryActivityModelLinksResponse,
} from './time-entry-activity-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const timeEntryActivityModel = z.lazy(() => {
  return z.object({
    _type: timeEntryActivityModelType,
    id: z.number().gte(1),
    name: z.string(),
    position: z.number(),
    default: z.boolean(),
    _embedded: timeEntryActivityModelEmbedded,
    _links: timeEntryActivityModelLinks,
  });
});

/**
 *
 * @typedef  {TimeEntryActivityModel} timeEntryActivityModel
 * @property {TimeEntryActivityModelType}
 * @property {number} - Time entry id
 * @property {string} - The human readable name chosen for this activity
 * @property {number} - The rank the activity has in a list of activities
 * @property {boolean} - Flag to signal whether this activity is the default activity
 * @property {TimeEntryActivityModelEmbedded}
 * @property {TimeEntryActivityModelLinks}
 */
export type TimeEntryActivityModel = z.infer<typeof timeEntryActivityModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const timeEntryActivityModelResponse = z.lazy(() => {
  return z
    .object({
      _type: timeEntryActivityModelType,
      id: z.number().gte(1),
      name: z.string(),
      position: z.number(),
      default: z.boolean(),
      _embedded: timeEntryActivityModelEmbeddedResponse,
      _links: timeEntryActivityModelLinksResponse,
    })
    .transform((data) => ({
      _type: data['_type'],
      id: data['id'],
      name: data['name'],
      position: data['position'],
      default: data['default'],
      _embedded: data['_embedded'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const timeEntryActivityModelRequest = z.lazy(() => {
  return z
    .object({
      _type: timeEntryActivityModelType,
      id: z.number().gte(1),
      name: z.string(),
      position: z.number(),
      default: z.boolean(),
      _embedded: timeEntryActivityModelEmbeddedRequest,
      _links: timeEntryActivityModelLinksRequest,
    })
    .transform((data) => ({
      _type: data['_type'],
      id: data['id'],
      name: data['name'],
      position: data['position'],
      default: data['default'],
      _embedded: data['_embedded'],
      _links: data['_links'],
    }));
});
