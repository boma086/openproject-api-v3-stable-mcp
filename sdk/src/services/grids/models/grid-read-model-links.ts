// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf34, _linksSelf34, _linksSelf34Request, _linksSelf34Response } from './_links-self-34';
import {
  _LinksAttachments5,
  _linksAttachments5,
  _linksAttachments5Request,
  _linksAttachments5Response,
} from './_links-attachments-5';
import {
  _LinksAddAttachment4,
  _linksAddAttachment4,
  _linksAddAttachment4Request,
  _linksAddAttachment4Response,
} from './_links-add-attachment-4';
import { _LinksScope1, _linksScope1, _linksScope1Request, _linksScope1Response } from './_links-scope-1';
import {
  _LinksUpdateImmediately3,
  _linksUpdateImmediately3,
  _linksUpdateImmediately3Request,
  _linksUpdateImmediately3Response,
} from './_links-update-immediately-3';
import { _LinksUpdate4, _linksUpdate4, _linksUpdate4Request, _linksUpdate4Response } from './_links-update-4';
import { _LinksDelete7, _linksDelete7, _linksDelete7Request, _linksDelete7Response } from './_links-delete-7';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gridReadModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf34,
    attachments: _linksAttachments5.optional(),
    addAttachment: _linksAddAttachment4.optional(),
    scope: _linksScope1,
    updateImmediately: _linksUpdateImmediately3.optional(),
    update: _linksUpdate4.optional(),
    delete: _linksDelete7.optional(),
  });
});

/**
 * 
 * @typedef  {GridReadModelLinks} gridReadModelLinks   
 * @property {_LinksSelf34} - This grid.

``Resource``: Grid
 * @property {_LinksAttachments5} - The attachment collection of this grid.

``Resource``: AttachmentCollection
 * @property {_LinksAddAttachment4} - Link for adding an attachment to this grid.
 * @property {_LinksScope1} - The location where this grid is used, usually represented as a relative URL.
 * @property {_LinksUpdateImmediately3} - Directly perform edits on this grid.

# Conditions

``Permission``: depends on the page the grid is defined for
 * @property {_LinksUpdate4} - Validate edits on the grid via a form resource before committing

# Conditions

``Permission``: depends on the page the grid is defined for
 * @property {_LinksDelete7} - Deletes this grid resource.
 */
export type GridReadModelLinks = z.infer<typeof gridReadModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gridReadModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf34Response,
      attachments: _linksAttachments5Response.optional(),
      addAttachment: _linksAddAttachment4Response.optional(),
      scope: _linksScope1Response,
      updateImmediately: _linksUpdateImmediately3Response.optional(),
      update: _linksUpdate4Response.optional(),
      delete: _linksDelete7Response.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      scope: data['scope'],
      updateImmediately: data['updateImmediately'],
      update: data['update'],
      delete: data['delete'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gridReadModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf34Request,
      attachments: _linksAttachments5Request.optional(),
      addAttachment: _linksAddAttachment4Request.optional(),
      scope: _linksScope1Request,
      updateImmediately: _linksUpdateImmediately3Request.optional(),
      update: _linksUpdate4Request.optional(),
      delete: _linksDelete7Request.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      attachments: data['attachments'],
      addAttachment: data['addAttachment'],
      scope: data['scope'],
      updateImmediately: data['updateImmediately'],
      update: data['update'],
      delete: data['delete'],
    }));
});
