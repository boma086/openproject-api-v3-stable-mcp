// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksJumpTo1, _linksJumpTo1, _linksJumpTo1Request, _linksJumpTo1Response } from './_links-jump-to-1';
import {
  _LinksChangeSize1,
  _linksChangeSize1,
  _linksChangeSize1Request,
  _linksChangeSize1Response,
} from './_links-change-size-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const gridCollectionModelLinks = z.lazy(() => {
  return z.object({
    jumpTo: _linksJumpTo1,
    changeSize: _linksChangeSize1,
  });
});

/**
 * 
 * @typedef  {GridCollectionModelLinks} gridCollectionModelLinks   
 * @property {_LinksJumpTo1} - Templated link to another page offset.

``Resource``: Collection
 * @property {_LinksChangeSize1} - Templated link for another page size.

``Resource``: Collection
 */
export type GridCollectionModelLinks = z.infer<typeof gridCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const gridCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      jumpTo: _linksJumpTo1Response,
      changeSize: _linksChangeSize1Response,
    })
    .transform((data) => ({
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const gridCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      jumpTo: _linksJumpTo1Request,
      changeSize: _linksChangeSize1Request,
    })
    .transform((data) => ({
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});
