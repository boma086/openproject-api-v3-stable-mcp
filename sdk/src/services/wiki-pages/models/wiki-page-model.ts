// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  WikiPageModelLinks,
  wikiPageModelLinks,
  wikiPageModelLinksRequest,
  wikiPageModelLinksResponse,
} from './wiki-page-model-links';

/**
 * The shape of the model inside the application code - what the users use
 */
export const wikiPageModel = z.lazy(() => {
  return z.object({
    id: z.number().optional(),
    title: z.string(),
    _links: wikiPageModelLinks.optional(),
  });
});

/**
 *
 * @typedef  {WikiPageModel} wikiPageModel
 * @property {number} - Identifier of this wiki page
 * @property {string} - The wiki page's title
 * @property {WikiPageModelLinks}
 */
export type WikiPageModel = z.infer<typeof wikiPageModel>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const wikiPageModelResponse = z.lazy(() => {
  return z
    .object({
      id: z.number().optional(),
      title: z.string(),
      _links: wikiPageModelLinksResponse.optional(),
    })
    .transform((data) => ({
      id: data['id'],
      title: data['title'],
      _links: data['_links'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const wikiPageModelRequest = z.lazy(() => {
  return z
    .object({
      id: z.number().optional(),
      title: z.string(),
      _links: wikiPageModelLinksRequest.optional(),
    })
    .transform((data) => ({
      id: data['id'],
      title: data['title'],
      _links: data['_links'],
    }));
});
