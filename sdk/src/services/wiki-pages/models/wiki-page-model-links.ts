// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  _LinksAddAttachment8,
  _linksAddAttachment8,
  _linksAddAttachment8Request,
  _linksAddAttachment8Response,
} from './_links-add-attachment-8';

/**
 * The shape of the model inside the application code - what the users use
 */
export const wikiPageModelLinks = z.lazy(() => {
  return z.object({
    addAttachment: _linksAddAttachment8.optional(),
  });
});

/**
 * 
 * @typedef  {WikiPageModelLinks} wikiPageModelLinks   
 * @property {_LinksAddAttachment8} - Attach a file to the wiki page

# Conditions

``Permission``: edit wiki page
 */
export type WikiPageModelLinks = z.infer<typeof wikiPageModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const wikiPageModelLinksResponse = z.lazy(() => {
  return z
    .object({
      addAttachment: _linksAddAttachment8Response.optional(),
    })
    .transform((data) => ({
      addAttachment: data['addAttachment'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const wikiPageModelLinksRequest = z.lazy(() => {
  return z
    .object({
      addAttachment: _linksAddAttachment8Request.optional(),
    })
    .transform((data) => ({
      addAttachment: data['addAttachment'],
    }));
});
