// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  CollectionLinksSelf,
  collectionLinksSelf,
  collectionLinksSelfRequest,
  collectionLinksSelfResponse,
} from '../work-packages/models/collection-links-self';

/**
 * The shape of the model inside the application code - what the users use
 */
export const collectionLinks = z.lazy(() => {
  return z.object({
    self: collectionLinksSelf,
  });
});

/**
 * 
 * @typedef  {CollectionLinks} collectionLinks   
 * @property {CollectionLinksSelf} - This collection resource.

``Resource``: Collection
 */
export type CollectionLinks = z.infer<typeof collectionLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const collectionLinksResponse = z.lazy(() => {
  return z
    .object({
      self: collectionLinksSelfResponse,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const collectionLinksRequest = z.lazy(() => {
  return z
    .object({
      self: collectionLinksSelfRequest,
    })
    .transform((data) => ({
      self: data['self'],
    }));
});
