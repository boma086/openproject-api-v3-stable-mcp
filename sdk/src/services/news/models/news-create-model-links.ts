// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksProject10, _linksProject10, _linksProject10Request, _linksProject10Response } from './_links-project-10';

/**
 * The shape of the model inside the application code - what the users use
 */
export const newsCreateModelLinks = z.lazy(() => {
  return z.object({
    project: _linksProject10,
  });
});

/**
 * 
 * @typedef  {NewsCreateModelLinks} newsCreateModelLinks   
 * @property {_LinksProject10} - The project the news is situated in

``Resource``: Project
 */
export type NewsCreateModelLinks = z.infer<typeof newsCreateModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const newsCreateModelLinksResponse = z.lazy(() => {
  return z
    .object({
      project: _linksProject10Response,
    })
    .transform((data) => ({
      project: data['project'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const newsCreateModelLinksRequest = z.lazy(() => {
  return z
    .object({
      project: _linksProject10Request,
    })
    .transform((data) => ({
      project: data['project'],
    }));
});
