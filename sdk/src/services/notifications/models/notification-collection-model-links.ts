// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { _LinksSelf46, _linksSelf46, _linksSelf46Request, _linksSelf46Response } from './_links-self-46';
import { _LinksJumpTo4, _linksJumpTo4, _linksJumpTo4Request, _linksJumpTo4Response } from './_links-jump-to-4';
import {
  _LinksChangeSize4,
  _linksChangeSize4,
  _linksChangeSize4Request,
  _linksChangeSize4Response,
} from './_links-change-size-4';

/**
 * The shape of the model inside the application code - what the users use
 */
export const notificationCollectionModelLinks = z.lazy(() => {
  return z.object({
    self: _linksSelf46,
    jumpTo: _linksJumpTo4.optional(),
    changeSize: _linksChangeSize4.optional(),
  });
});

/**
 * 
 * @typedef  {NotificationCollectionModelLinks} notificationCollectionModelLinks   
 * @property {_LinksSelf46} - This notification collection

``Resource``: NotificationCollectionModel
 * @property {_LinksJumpTo4} - The notification collection at another offset

``Resource``: NotificationCollectionModel
 * @property {_LinksChangeSize4} - The notification collection with another size

``Resource``: NotificationCollectionModel
 */
export type NotificationCollectionModelLinks = z.infer<typeof notificationCollectionModelLinks>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const notificationCollectionModelLinksResponse = z.lazy(() => {
  return z
    .object({
      self: _linksSelf46Response,
      jumpTo: _linksJumpTo4Response.optional(),
      changeSize: _linksChangeSize4Response.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const notificationCollectionModelLinksRequest = z.lazy(() => {
  return z
    .object({
      self: _linksSelf46Request,
      jumpTo: _linksJumpTo4Request.optional(),
      changeSize: _linksChangeSize4Request.optional(),
    })
    .transform((data) => ({
      self: data['self'],
      jumpTo: data['jumpTo'],
      changeSize: data['changeSize'],
    }));
});
