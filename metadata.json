{
  "name": "OpenProjectApiV3Stable_",
  "description": "You&#39;re looking at the current **stable** documentation of the OpenProject APIv3. If you&#39;re interested in the current development version, please go to [github.com/opf](https://github.com/opf/openproject/tree/dev/docs/api/apiv3). ## Introduction The documentation for the APIv3 is written according to the [OpenAPI 3.1 Specification](https://swagger.io/specification/). You can either view the static version of this documentation on the [website](https://www.openproject.org/docs/api/introduction/) or the interactive version, rendered with [OpenAPI Explorer](https://github.com/Rhosys/openapi-explorer/blob/main/README.md), in your OpenProject installation under `/api/docs`. In the latter you can try out the various API endpoints directly interacting with our OpenProject data. Moreover you can access the specification source itself under `/api/v3/spec.json` and `/api/v3/spec.yml` (e.g. [here](https://community.openproject.org/api/v3/spec.yml)). The APIv3 is a hypermedia REST API, a shorthand for \&#34;Hypermedia As The Engine Of Application State\&#34; (HATEOAS). This means that each endpoint of this API will have links to other resources or actions defined in the resulting body. These related resources and actions for any given resource will be context sensitive. For example, only actions that the authenticated user can take are being rendered. This can be used to dynamically identify actions that the user might take for any given response. As an example, if you fetch a work package through the [Work Package endpoint](https://www.openproject.org/docs/api/endpoints/work-packages/), the `update` link will only be present when the user you authenticated has been granted a permission to update the work package in the assigned project. ## HAL+JSON HAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API. Read more in the following specification: [https://tools.ietf.org/html/draft-kelly-json-hal-08](https://tools.ietf.org/html/draft-kelly-json-hal-08) **OpenProject API implementation of HAL+JSON format** enriches JSON and introduces a few meta properties: - `_type` - specifies the type of the resource (e.g.: WorkPackage, Project) - `_links` - contains all related resource and action links available for the resource - `_embedded` - contains all embedded objects HAL does not guarantee that embedded resources are embedded in their full representation, they might as well be partially represented (e.g. some properties can be left out). However in this API you have the guarantee that whenever a resource is **embedded**, it is embedded in its **full representation**. ## API response structure All API responses contain a single HAL+JSON object, even collections of objects are technically represented by a single HAL+JSON object that itself contains its members. More details on collections can be found in the [Collections Section](https://www.openproject.org/docs/api/collections/). ## Authentication The API supports the following authentication schemes: OAuth2, session based authentication, and basic auth. Depending on the settings of the OpenProject instance many resources can be accessed without being authenticated. In case the instance requires authentication on all requests the client will receive an **HTTP 401** status code in response to any request. Otherwise unauthenticated clients have all the permissions of the anonymous user. ### Session-based Authentication This means you have to login to OpenProject via the Web-Interface to be authenticated in the API. This method is well-suited for clients acting within the browser, like the Angular-Client built into OpenProject. In this case, you always need to pass the HTTP header `X-Requested-With \&#34;XMLHttpRequest\&#34;` for authentication. ### API Key through Basic Auth Users can authenticate towards the API v3 using basic auth with the user name `apikey` (NOT your login) and the API key as the password. Users can find their API key on their account page. Example: ```shell API_KEY=2519132cdf62dcf5a66fd96394672079f9e9cad1 curl -u apikey:$API_KEY https://community.openproject.org/api/v3/users/42 ``` ### OAuth2.0 authentication OpenProject allows authentication and authorization with OAuth2 with *Authorization code flow*, as well as *Client credentials* operation modes. To get started, you first need to register an application in the OpenProject OAuth administration section of your installation. This will save an entry for your application with a client unique identifier (`client_id`) and an accompanying secret key (`client_secret`). You can then use one the following guides to perform the supported OAuth 2.0 flows: - [Authorization code flow](https://oauth.net/2/grant-types/authorization-code) - [Authorization code flow with PKCE](https://doorkeeper.gitbook.io/guides/ruby-on-rails/pkce-flow), recommended for clients unable to keep the client_secret confidential - [Client credentials](https://oauth.net/2/grant-types/client-credentials/) - Requires an application to be bound to an impersonating user for non-public access ### OIDC provider generated JWT as a Bearer token There is a possibility to use JSON Web Tokens (JWT) generated by an OIDC provider configured in OpenProject as a bearer token to do authenticated requests against the API. The following requirements must be met: - OIDC provider must be configured in OpenProject with **jwks_uri** - JWT must be signed using RSA algorithm - JWT **iss** claim must be equal to OIDC provider **issuer** - JWT **aud** claim must contain the OpenProject **client ID** used at the OIDC provider - JWT **scope** claim must include a valid scope to access the desired API (e.g. `api_v3` for APIv3) - JWT must be actual (neither expired or too early to be used) - JWT must be passed in Authorization header like: `Authorization: Bearer {jwt}` - User from **sub** claim must be logged in OpenProject before otherwise it will be not authenticated In more general terms, OpenProject should be compliant to [RFC 9068](https://www.rfc-editor.org/rfc/rfc9068) when validating access tokens. ### Why not username and password? The simplest way to do basic auth would be to use a user&#39;s username and password naturally. However, OpenProject already has supported API keys in the past for the API v2, though not through basic auth. Using **username and password** directly would have some advantages: * It is intuitive for the user who then just has to provide those just as they would when logging into OpenProject. * No extra logic for token management necessary. On the other hand using **API keys** has some advantages too, which is why we went for that: * If compromised while saved on an insecure client the user only has to regenerate the API key instead of changing their password, too. * They are naturally long and random which makes them invulnerable to dictionary attacks and harder to crack in general. Most importantly users may not actually have a password to begin with. Specifically when they have registered through an OpenID Connect provider. ## Cross-Origin Resource Sharing (CORS) By default, the OpenProject API is _not_ responding with any CORS headers. If you want to allow cross-domain AJAX calls against your OpenProject instance, you need to enable CORS headers being returned. Please see [our API settings documentation](https://www.openproject.org/docs/system-admin-guide/api-and-webhooks/) on how to selectively enable CORS. ## Allowed HTTP methods - `GET` - Get a single resource or collection of resources - `POST` - Create a new resource or perform - `PATCH` - Update a resource - `DELETE` - Delete a resource ## Compression Responses are compressed if requested by the client. Currently [gzip](https://www.gzip.org/) and [deflate](https://tools.ietf.org/html/rfc1951) are supported. The client signals the desired compression by setting the [`Accept-Encoding` header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3). If no `Accept-Encoding` header is send, `Accept-Encoding: identity` is assumed which will result in the API responding uncompressed.",
  "environmentVariables": [
    {
      "name": "BASE_URL",
      "description": "Base URL for the API.",
      "required": false
    },
    {
      "name": "PASSWORD",
      "description": "Password required for authentication.",
      "required": true
    },
    {
      "name": "USERNAME",
      "description": "Username required for authentication.",
      "required": true
    }
  ],
  "services": [
    {
      "name": "Root",
      "tools": [
        {
          "name": "view_root",
          "description": "Returns the root resource, containing basic information about the server instance and a collection of useful links."
        }
      ]
    },
    {
      "name": "Actions & Capabilities",
      "tools": [
        {
          "name": "list_actions",
          "description": "Returns a collection of actions. The client can choose to filter the actions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client has sufficient permissions."
        },
        {
          "name": "view_action",
          "description": "Returns an individual action."
        },
        {
          "name": "list_capabilities",
          "description": "Returns a collection of actions assigned to a principal in a context. The client can choose to filter the actions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client has sufficient permissions"
        },
        {
          "name": "view_global_context",
          "description": "Returns the global capability context. This context is necessary to consistently link to a context even if the context is not a project."
        },
        {
          "name": "view_capabilities",
          "description": "View capabilities"
        }
      ]
    },
    {
      "name": "Activities",
      "tools": [
        {
          "name": "get_activity",
          "description": "Returns the requested activity resource identified by its unique id."
        },
        {
          "name": "update_activity",
          "description": "Updates an activity's comment and, on success, returns the updated activity."
        },
        {
          "name": "list_activity_attachments",
          "description": "List all attachments of a single activity."
        },
        {
          "name": "create_activity_attachment",
          "description": "Adds an attachment to the specified activity."
        }
      ]
    },
    {
      "name": "Attachments",
      "tools": [
        {
          "name": "create_attachment",
          "description": "Clients can create attachments without a container first and attach them later on. This is useful if the container does not exist at the time the attachment is uploaded. After the upload, the client can then claim such containerless attachments for any resource eligible e.g. WorkPackage on subsequent requests. The upload and the claiming must be done for the same user account. Attachments uploaded by another user cannot be claimed and once claimed for a resource, they cannot be claimed by another. The upload request must be of type multipartform-data with exactly two parts. The first part must be called metadata. Its content type is expected to be applicationjson, the body must be a single JSON object, containing at least the fileName and optionally the attachments description. The second part must be called file, its content type should match the mime type of the file. The body must be the raw content of the file. Note that a filename must be indicated in the Content-Disposition of this part, although it will be ignored. Instead the fileName inside the JSON of the metadata part will be used."
        },
        {
          "name": "view_attachment",
          "description": "View attachment"
        },
        {
          "name": "delete_attachment",
          "description": "Permanently deletes the specified attachment."
        },
        {
          "name": "list_attachments_by_meeting",
          "description": "List attachments by meeting"
        },
        {
          "name": "add_attachment_to_meeting",
          "description": "Adds an attachment with the meeting as its container."
        },
        {
          "name": "list_attachments_by_post",
          "description": "List attachments by post"
        },
        {
          "name": "add_attachment_to_post",
          "description": "Adds an attachment with the post as its container."
        },
        {
          "name": "list_attachments_by_wiki_page",
          "description": "List attachments by wiki page"
        },
        {
          "name": "add_attachment_to_wiki_page",
          "description": "Adds an attachment with the wiki page as its container."
        },
        {
          "name": "list_work_package_attachments",
          "description": "List attachments by work package"
        },
        {
          "name": "create_work_package_attachment",
          "description": "To add an attachment to a work package, a client needs to issue a request of type multipartform-data with exactly two parts. The first part must be called metadata. Its content type is expected to be applicationjson, the body must be a single JSON object, containing at least the fileName and optionally the attachments description. The second part must be called file, its content type should match the mime type of the file. The body must be the raw content of the file. Note that a filename must be indicated in the Content-Disposition of this part, however it will be ignored. Instead the fileName inside the JSON of the metadata part will be used."
        }
      ]
    },
    {
      "name": "Budgets",
      "tools": [
        {
          "name": "view_budget",
          "description": "view Budget"
        },
        {
          "name": "view_budgets_of_a_project",
          "description": "view Budgets of a Project"
        }
      ]
    },
    {
      "name": "Categories",
      "tools": [
        {
          "name": "view_category",
          "description": "View Category"
        },
        {
          "name": "list_categories_of_a_project",
          "description": "List categories of a project"
        }
      ]
    },
    {
      "name": "Configuration",
      "tools": [
        {
          "name": "view_configuration",
          "description": "View configuration"
        }
      ]
    },
    {
      "name": "Custom actions",
      "tools": [
        {
          "name": "get_custom_action",
          "description": "Retrieves a custom action by id."
        },
        {
          "name": "execute_custom_action",
          "description": "A POST to this end point executes the custom action on the work package provided in the payload. The altered work package will be returned. In order to avoid executing  the custom action unbeknown to a change that has already taken place, the client has to provide the work package's current lockVersion."
        }
      ]
    },
    {
      "name": "api",
      "tools": [
        {
          "name": "get_custom_field_items",
          "description": "Retrieves the hierarchy of custom fields. The hierarchy is a tree structure of hierarchy items. It is represented as a flat list of items, where each item has a reference to its parent and children. The list is ordered in a depth-first manner. The first item is the requested parent. If parent was unset, the root item is returned as first element. Passing the depth query parameter allows to limit the depth of the hierarchy. If the depth is unset, the full hierarchy tree is returned. If the depth is set to 0, only the requested parent is returned. Any other positive integer will return the number of children levels specified by this value. This endpoint only returns, if the custom field is of type hierarchy."
        },
        {
          "name": "get_custom_field_item",
          "description": "Retrieves a single custom field item specified by its unique identifier."
        },
        {
          "name": "get_custom_field_item_branch",
          "description": "Retrieves the branch of a single custom field item specified by its unique identifier. A branch is list of all ancestors, starting with the root item and finishing with the item itself."
        }
      ]
    },
    {
      "name": "Custom Options",
      "tools": [
        {
          "name": "view_custom_option",
          "description": "View Custom Option"
        }
      ]
    },
    {
      "name": "Work Schedule",
      "tools": [
        {
          "name": "list_non_working_days",
          "description": "Lists all one-time non working days, such as holidays. It does not lists the non working weekdays, such as each Saturday, Sunday. For listing the weekends, the apiv3days endpoint should be used. All days from current year are returned by default."
        },
        {
          "name": "create_non_working_day",
          "description": "NOT IMPLEMENTED Marks a day as being a non-working day. Note creating a non-working day will not affect the start and finish dates of work packages but will affect their duration."
        },
        {
          "name": "view_non_working_day",
          "description": "Returns the non-working day information for a given date."
        },
        {
          "name": "update_non_working_day",
          "description": "NOT IMPLEMENTED Update the non-working day information for a given date."
        },
        {
          "name": "delete_non_working_day",
          "description": "NOT IMPLEMENTED Removes the non-working day at the given date. Note deleting a non-working day will not affect the start and finish dates of work packages but will affect their duration."
        },
        {
          "name": "list_week_days",
          "description": "Lists week days with work schedule information."
        },
        {
          "name": "update_week_days",
          "description": "NOT IMPLEMENTED Update multiple week days with work schedule information."
        },
        {
          "name": "view_week_day",
          "description": "View a week day and its attributes."
        },
        {
          "name": "update_week_day",
          "description": "NOT IMPLEMENTED Makes a week day a working or non-working day. Note changing a week day working attribute will not affect the start and finish dates of work packages but will affect their duration attribute."
        },
        {
          "name": "list_days",
          "description": "Lists days information for a given date interval. All days from the beginning of current month to the end of following month are returned by default."
        },
        {
          "name": "view_day",
          "description": "View the day information for a given date."
        }
      ]
    },
    {
      "name": "Documents",
      "tools": [
        {
          "name": "list_documents",
          "description": "The documents returned depend on the provided parameters and also on the requesting user's permissions."
        },
        {
          "name": "view_document",
          "description": "View document"
        }
      ]
    },
    {
      "name": "Forms",
      "tools": [
        {
          "name": "show_or_validate_form",
          "description": "This is an example of how a form might look like. Note that this endpoint does not exist in the actual implementation."
        }
      ]
    },
    {
      "name": "Schemas",
      "tools": [
        {
          "name": "view_the_schema",
          "description": "This is an example of how a schema might look like. Note that this endpoint does not exist in the actual implementation."
        }
      ]
    },
    {
      "name": "Collections",
      "tools": [
        {
          "name": "view_aggregated_result",
          "description": "view aggregated result"
        }
      ]
    },
    {
      "name": "File links",
      "tools": [
        {
          "name": "view_file_link",
          "description": "Gets a single file link resource of a work package."
        },
        {
          "name": "delete_file_link",
          "description": "Removes a file link on a work package. The request contains only the file link identifier as a path parameter. No request body is needed."
        },
        {
          "name": "open_file_link",
          "description": "Creates a uri to open the origin file linked by the given file link. This uri depends on the storage type and is always located on the origin storage itself."
        },
        {
          "name": "download_file_link",
          "description": "Creates a uri to download the origin file linked by the given file link. This uri depends on the storage type and is always located on the origin storage itself."
        },
        {
          "name": "list_project_storages",
          "description": "Gets a collection of all project storages that meet the provided filters and the user has permission to see them."
        },
        {
          "name": "get_project_storage",
          "description": "Gets a project storage resource. This resource contains all data that is applicable on the relation between a storage and a project."
        },
        {
          "name": "open_project_storage",
          "description": "Gets a redirect to the location of the project storage's remote origin. If the project storage has a project folder, it is opened at this location. If not, the storage root is opened."
        },
        {
          "name": "list_storages",
          "description": "Returns a collection of storages."
        },
        {
          "name": "create_storage",
          "description": "Creates a storage resource. When creating a storage, a confidential OAuth 2 provider application is created automatically. The oauth client id and secret of the created OAuth application are returned in the response. IMPORTANT This is the only time, the oauth client secret is visible to the consumer. After that, the secret is hidden. To update the storage with OAuth client credentials, which enable the storage resource to behave as an OAuth 2 client against an external OAuth 2 provider application, another request must be made to create those, see POST apiv3storagesidoauthclientcredentials."
        },
        {
          "name": "get_storage",
          "description": "Gets a storage resource. As a side effect, a live connection to the storages origin is established to retrieve connection state data."
        },
        {
          "name": "update_storage",
          "description": "Updates a storage resource. Only data that is not generated by the server can be updated. This excludes the OAuth 2 application data."
        },
        {
          "name": "delete_storage",
          "description": "Deletes a storage resource. This also deletes all related records, like the created oauth application, client, and any file links created within this storage."
        },
        {
          "name": "get_storage_files",
          "description": "Gets a collection of files from a storage. If no parent context is given, the result is the content of the document root. With parent context given, the result contains the collections of filesdirectories from within the given parent file id. If given parent context is no directory, 400 Bad Request is returned."
        },
        {
          "name": "prepare_storage_file_upload",
          "description": "Executes a request that prepares a link for a direct upload to the storage. The background here is, that the client needs to make a direct request to the storage instance for file uploading, but should not get access to the credentials, which are stored in the backend. The response contains a link object, that enables the client to execute a file upload without the real credentials."
        },
        {
          "name": "create_storage_folder",
          "description": "Creates a new folder under the given parent"
        },
        {
          "name": "create_storage_oauth_credentials",
          "description": "Inserts the OAuth 2 credentials into the storage, to allow the storage to act as an OAuth 2 client. Calling this endpoint on a storage that already contains OAuth 2 client credentials will replace them."
        },
        {
          "name": "open_storage",
          "description": "Gets a redirect to the location of the storage's remote origin. The storage's files root should be the target location."
        }
      ]
    },
    {
      "name": "Grids",
      "tools": [
        {
          "name": "list_grids",
          "description": "Lists all grids matching the provided filters and being part of the selected query page. The grids returned will also depend on the permissions of the requesting user."
        },
        {
          "name": "create_grid",
          "description": "Creates a new grid applying the attributes provided in the body. The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to create a grid."
        },
        {
          "name": "grid_create_form",
          "description": "Grid Create Form"
        },
        {
          "name": "get_grid",
          "description": "Fetches a single grid identified by its id."
        },
        {
          "name": "update_grid",
          "description": "Updates the given grid by applying the attributes provided in the body. The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to update a grid."
        },
        {
          "name": "grid_update_form",
          "description": "Grid Update Form"
        }
      ]
    },
    {
      "name": "Groups",
      "tools": [
        {
          "name": "list_groups",
          "description": "Returns a collection of groups. The client can choose to filter the groups similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain groups, for which the requesting client has sufficient permissions viewmembers, managemembers."
        },
        {
          "name": "create_group",
          "description": "Creates a new group applying the attributes provided in the body."
        },
        {
          "name": "get_group",
          "description": "Fetches a group resource."
        },
        {
          "name": "update_group",
          "description": "Updates the given group by applying the attributes provided in the body. Please note that the members array provided will override the existing set of members similar to a PUT. A client thus has to provide the complete list of members the group is to have after the PATCH even if only one member is to be added."
        },
        {
          "name": "delete_group",
          "description": "Deletes the group."
        }
      ]
    },
    {
      "name": "Help texts",
      "tools": [
        {
          "name": "list_help_texts",
          "description": "List the complete collection of help texts."
        },
        {
          "name": "get_help_text",
          "description": "Fetches the help text from the given id."
        }
      ]
    },
    {
      "name": "Meetings",
      "tools": [
        {
          "name": "view_meeting",
          "description": "Retrieve an individual meeting as identified by the id parameter"
        }
      ]
    },
    {
      "name": "Memberships",
      "tools": [
        {
          "name": "list_memberships",
          "description": "Returns a collection of memberships. The client can choose to filter the memberships similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain memberships, for which the requesting client has sufficient permissions viewmembers, managemembers."
        },
        {
          "name": "create_membership",
          "description": "Creates a new membership applying the attributes provided in the body. You can use the form and schema to retrieve the valid attribute values and by that be guided towards successful creation. By providing a notificationMessage within the meta block of the payload, the client can include a customized message to the user of the newly created membership. In case of a group, the message will be sent to every user belonging to the group. By including  \\\"sendNotifications\\\" false  within the meta block of the payload, no notifications is send out at all."
        },
        {
          "name": "get_memberships_available_projects",
          "description": "Gets a list of projects in which a membership can be created in. The list contains all projects in which the user issuing the request has the manage members permissions."
        },
        {
          "name": "form_create_membership",
          "description": "Requests and validates the creation form for memberships. The request payload, if sent, is validated. The form endpoint itself does not create a membership."
        },
        {
          "name": "get_membership_schema",
          "description": "Retrieves the schema for the membership resource object."
        },
        {
          "name": "get_membership",
          "description": "Retrieves a membership resource identified by the given id."
        },
        {
          "name": "update_membership",
          "description": "Updates the given membership by applying the attributes provided in the body. By providing a notificationMessage within the meta block of the payload, the client can include a customized message to the user of the updated membership. In case of a group, the message will be sent to every user belonging to the group. By including  \\\"sendNotifications\\\" false  within the meta block of the payload, no notifications is send out at all."
        },
        {
          "name": "delete_membership",
          "description": "Deletes the membership."
        },
        {
          "name": "form_update_membership",
          "description": "Requests and validates the update form for a membership identified by the given id. The request payload, if sent, is validated. The form endpoint itself does not change the membership."
        }
      ]
    },
    {
      "name": "UserPreferences",
      "tools": [
        {
          "name": "show_my_preferences",
          "description": "Show my preferences"
        },
        {
          "name": "update_user_preferences",
          "description": "When calling this endpoint the client provides a single object, containing the properties that it wants to change, in the body."
        }
      ]
    },
    {
      "name": "News",
      "tools": [
        {
          "name": "list_news",
          "description": "Lists news. The news returned depend on the provided parameters and also on the requesting user's permissions."
        },
        {
          "name": "create_news",
          "description": "Creates a news entry. Only administrators and users with \\\"Manage news\\\" permission in the given project are eligible. When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body."
        },
        {
          "name": "view_news",
          "description": "View news"
        },
        {
          "name": "update_news",
          "description": "Updates the news's writable attributes. When calling this endpoint the client provides a single object, containing the properties and links to be updated, in the body."
        },
        {
          "name": "delete_news",
          "description": "Permanently deletes the specified news entry."
        }
      ]
    },
    {
      "name": "Notifications",
      "tools": [
        {
          "name": "list_notifications",
          "description": "Returns the collection of available in-app notifications. The notifications returned depend on the provided parameters and also on the requesting user's permissions. Contrary to most collections, this one also links to and embeds schemas for the details properties of the notifications returned. This is an optimization. Clients will receive the information necessary to display the various types of details that a notification can carry."
        },
        {
          "name": "read_notifications",
          "description": "Marks the whole notification collection as read. The collection contains only elements the authenticated user can see, and can be further reduced with filters."
        },
        {
          "name": "unread_notifications",
          "description": "Marks the whole notification collection as unread. The collection contains only elements the authenticated user can see, and can be further reduced with filters."
        },
        {
          "name": "view_notification",
          "description": "Returns the notification identified by the notification id."
        },
        {
          "name": "view_notification_detail",
          "description": "Returns an individual detail of a notification identified by the notification id and the id of the detail."
        },
        {
          "name": "read_notification",
          "description": "Marks the given notification as read."
        },
        {
          "name": "unread_notification",
          "description": "Marks the given notification as unread."
        }
      ]
    },
    {
      "name": "OAuth 2",
      "tools": [
        {
          "name": "get_oauth_application",
          "description": "Retrieves the OAuth 2 provider application for the given identifier. The secret will not be part of the response, instead a confidential flag is indicating, whether there is a secret or not."
        },
        {
          "name": "get_oauth_client_credentials",
          "description": "Retrieves the OAuth 2 client credentials for the given identifier. The secret will not be part of the response, instead a confidential flag is indicating, whether there is a secret or not."
        }
      ]
    },
    {
      "name": "Principals",
      "tools": [
        {
          "name": "list_placeholder_users",
          "description": "List all placeholder users. This can only be accessed if the requesting user has the global permission manageplaceholderuser or managemembers in any project."
        },
        {
          "name": "create_placeholder_user",
          "description": "Creates a new placeholder user. Only administrators and users with manageplaceholderuser global permission are allowed to do so. When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body."
        },
        {
          "name": "view_placeholder_user",
          "description": "Return the placeholder user resource."
        },
        {
          "name": "update_placeholder_user",
          "description": "Updates the placeholder user's writable attributes. When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body."
        },
        {
          "name": "delete_placeholder_user",
          "description": "Set the specified placeholder user to deleted status."
        },
        {
          "name": "list_principals",
          "description": "List all principals. The client can choose to filter the principals similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain principals who are members in projects the client is allowed to see."
        }
      ]
    },
    {
      "name": "Posts",
      "tools": [
        {
          "name": "view_post",
          "description": "Retrieve an individual post as identified by the id parameter"
        }
      ]
    },
    {
      "name": "Priorities",
      "tools": [
        {
          "name": "list_all_priorities",
          "description": "List all Priorities"
        },
        {
          "name": "view_priority",
          "description": "View Priority"
        }
      ]
    },
    {
      "name": "Projects",
      "tools": [
        {
          "name": "list_projects",
          "description": "Returns a collection of projects. The collection can be filtered via query parameters similar to how work packages are filtered. In addition to the provided filter, the result set is always limited to only contain projects the client is allowed to see."
        },
        {
          "name": "create_project",
          "description": "Creates a new project, applying the attributes provided in the body. You can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation."
        },
        {
          "name": "project_create_form",
          "description": "Project create form"
        },
        {
          "name": "view_project_schema",
          "description": "View project schema"
        },
        {
          "name": "view_project",
          "description": "View project"
        },
        {
          "name": "update_project",
          "description": "Updates the given project by applying the attributes provided in the body."
        },
        {
          "name": "delete_project",
          "description": "Deletes the project permanently. As this is a lengthy process, the actual deletion is carried out asynchronously. So the project might exist well after the request has returned successfully. To prevent unwanted changes to the project scheduled for deletion, it is archived at once."
        },
        {
          "name": "project_update_form",
          "description": "Project update form"
        },
        {
          "name": "create_project_copy",
          "description": "Create project copy"
        },
        {
          "name": "project_copy_form",
          "description": "Project copy form"
        },
        {
          "name": "view_project_status",
          "description": "View project status"
        },
        {
          "name": "list_available_parent_project_candidates",
          "description": "Lists projects which can become parent to another project. Only sound candidates are returned. For instance a project cannot become parent of itself or its children. To specify the project for which a parent is queried for, the of parameter can be provided. If no of parameter is provided, a new project is assumed. Then, the check for the hierarchy is omitted as a new project cannot be part of a hierarchy yet. Candidates can be filtered. Most commonly one will want to filter by name or identifier. You can do this through the filters parameter which works just like the work package index. For instance to find all parent candidates with \\\"rollout\\\" in their name  filters\\\"nameandidentifier\\\"\\\"operator\\\"\\\"\\\",\\\"values\\\"\\\"rollout\\\""
        },
        {
          "name": "list_projects_with_version",
          "description": "This endpoint lists the projects where the given version is available. The projects returned depend on the sharing settings of the given version, but are also limited to the projects that the current user is allowed to see."
        }
      ]
    },
    {
      "name": "Queries",
      "tools": [
        {
          "name": "view_default_query_for_project",
          "description": "Same as viewing an existing, persisted Queryhttpswww.openproject.orgdocsapiendpointsquerieslist-queries in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query. The query will already be scoped for the project."
        },
        {
          "name": "view_schema_for_project_queries",
          "description": "Retrieve the schema for project queries."
        },
        {
          "name": "list_queries",
          "description": "Returns a collection of queries. The collection can be filtered via query parameters similar to how work packages are filtered. Please note however, that the filters are applied to the queries and not to the work packages the queries in turn might return."
        },
        {
          "name": "create_query",
          "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body. The required fields of a Query can be found in its schema, which is embedded in the respective form. Note that it is only allowed to provide properties or links supporting the write operation."
        },
        {
          "name": "available_projects_for_query",
          "description": "Gets a list of projects that are available as projects a query can be assigned to."
        },
        {
          "name": "view_default_query",
          "description": "Same as viewing an existing, persisted Queryhttpswww.openproject.orgdocsapiendpointsquerieslist-queries in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query."
        },
        {
          "name": "query_create_form",
          "description": "Query Create Form"
        },
        {
          "name": "view_schema_for_global_queries",
          "description": "Retrieve the schema for global queries, those, that are not assigned to a project."
        },
        {
          "name": "view_query",
          "description": "Retrieve an individual query as identified by the id parameter. Then end point accepts a number of parameters that can be used to override the resources' persisted parameters."
        },
        {
          "name": "edit_query",
          "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body. Note that it is only allowed to provide properties or links supporting the write operation."
        },
        {
          "name": "delete_query",
          "description": "Delete the query identified by the id parameter"
        },
        {
          "name": "query_update_form",
          "description": "Query Update Form"
        },
        {
          "name": "star_query",
          "description": "Star query"
        },
        {
          "name": "unstar_query",
          "description": "Unstar query"
        }
      ]
    },
    {
      "name": "Query Filter Instance Schema",
      "tools": [
        {
          "name": "list_query_filter_instance_schemas_for_project",
          "description": "Returns the list of QueryFilterInstanceSchemas defined for a query of the specified project."
        },
        {
          "name": "list_query_filter_instance_schemas",
          "description": "Returns the list of QueryFilterInstanceSchemas defined for a global query. That is a query not assigned to a project."
        },
        {
          "name": "view_query_filter_instance_schema",
          "description": "Retrieve an individual QueryFilterInstanceSchema as identified by the id parameter."
        }
      ]
    },
    {
      "name": "Work Packages",
      "tools": [
        {
          "name": "get_project_work_package_collection",
          "description": "Returns the collection of work packages that are related to the given project."
        },
        {
          "name": "create_project_work_package",
          "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body. The required fields of a WorkPackage can be found in its schema, which is embedded in the respective form. Note that it is only allowed to provide properties or links supporting the write operation."
        },
        {
          "name": "form_create_work_package_in_project",
          "description": "This endpoint allows you to validation a new work package creation body in a specific project. It works similarly to the apiv3workpackagesform endpoint, but already specifies the work package's project in the path, so that it does not have to be defined in the request body."
        },
        {
          "name": "project_available_assignees",
          "description": "Gets a list of users that can be assigned to work packages in the given project."
        },
        {
          "name": "list_work_packages",
          "description": "Returns a collection of work packages."
        },
        {
          "name": "create_work_package",
          "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body. The required fields of a WorkPackage can be found in its schema, which is embedded in the respective form. Note that it is only allowed to provide properties or links supporting the write operation. A project link must be set when creating work packages through this route. When setting start date, finish date, and duration together, their correctness will be checked and a 422 error will be returned if one value does not match with the two others. You can make the server compute a value set only two values in the request and the third one will be computed and returned in the response. For instance, when sending  \\\"startDate\\\" \\\"2022-08-23\\\", duration \\\"P2D\\\" , the response will include  \\\"dueDate\\\" \\\"2022-08-24\\\" ."
        },
        {
          "name": "form_create_work_package",
          "description": "When calling this endpoint, the client provides a single object containing the properties and links to be created, in the body. The input is validated and a schema response is returned. If the validation errors of the response is empty, the same payload can be used to create a work package. Only the properties of the work package write model are allowed to set on a work package on creation. When setting start date, finish date, and duration together, their correctness will be checked and a validation error will be returned if one value does not match with the two others. You can make the server compute a value set only two values in the request and the third one will be computed and returned in the response. For instance, when sending  \\\"startDate\\\" \\\"2022-08-23\\\", duration \\\"P2D\\\" , the response will include  \\\"dueDate\\\" \\\"2022-08-24\\\" ."
        },
        {
          "name": "list_work_package_schemas",
          "description": "List all work package schemas that match the given filters. This endpoint does not return a successful response, if no filter is given."
        },
        {
          "name": "view_work_package_schema",
          "description": "View Work Package Schema"
        },
        {
          "name": "view_work_package",
          "description": "Returns the specified work package."
        },
        {
          "name": "update_work_package",
          "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body. Note that it is only allowed to provide properties or links supporting the write operation. Additionally to the fields the client wants to change, it is mandatory to provide the value of lockVersion which was received by the GET request this change originates from. The value of lockVersion is used to implement optimistic lockinghttpsen.wikipedia.orgwikiOptimisticconcurrencycontrol."
        },
        {
          "name": "delete_work_package",
          "description": "Deletes the work package, as well as - all associated time entries - its hierarchy of child work packages"
        },
        {
          "name": "list_work_package_activities",
          "description": "List work package activities"
        },
        {
          "name": "comment_work_package",
          "description": "Creates an activity for the selected work package and, on success, returns the updated activity."
        },
        {
          "name": "work_package_available_assignees",
          "description": "Gets a list of users that can be assigned to the given work package."
        },
        {
          "name": "available_projects_for_work_package",
          "description": "Gets a list of projects that are available as projects to which the work package can be moved."
        },
        {
          "name": "list_available_relation_candidates",
          "description": "Available relation candidates"
        },
        {
          "name": "available_watchers",
          "description": "Gets a list of users that are able to be watchers of the specified work package."
        },
        {
          "name": "list_work_package_file_links",
          "description": "Gets all file links of a work package. As a side effect, for every file link a request is sent to the storage's origin to fetch live data and patch the file link's data before returning, as well as retrieving permissions of the user on this origin file."
        },
        {
          "name": "create_work_package_file_link",
          "description": "Creates file links on a work package. The request is interpreted as a bulk insert, where every element of the collection is validated separately. Each element contains the origin meta data and a link to the storage, the file link is about to point to. The storage link can be provided as a resource link with id or as the host url. The file's id and name are considered mandatory information. The rest of the origin meta data SHOULD be provided by the client. The mimeType SHOULD be a standard mime type. An empty mime type will be handled as unknown. To link a folder, the custom mime type applicationx-op-directory MUST be used. Up to 20 file links can be submitted at once. If any element data is invalid, no file links will be created. If a file link with matching origin id, work package, and storage already exists, then it will not create an additional file link or update the meta data. Instead the information from the existing file link will be returned."
        },
        {
          "name": "form_edit_work_package",
          "description": "When calling this endpoint, the client provides a single object containing the properties and links to be edited, in the body. The input is validated and a schema response is returned. If the validation errors of the response is empty, the same payload can be used to edit the work package. Only the properties of the work package write model are allowed to set on a work package on editing. When setting start date, finish date, and duration together, their correctness will be checked and a validation error will be returned if one value does not match with the two others. You can make the server compute a value set only two values in the request and the third one will be computed and returned in the response. For instance, when sending  \\\"startDate\\\" \\\"2022-08-23\\\", duration \\\"P2D\\\" , the response will include  \\\"dueDate\\\" \\\"2022-08-24\\\" ."
        },
        {
          "name": "revisions",
          "description": "Gets a list of revisions that are linked to this work package, e.g., because it is referenced in the commit message of the revision. Only linked revisions from repositories are shown if the user has the view changesets permission in the defining project."
        },
        {
          "name": "reminders",
          "description": "Gets a list of your upcoming reminders for this work package."
        },
        {
          "name": "list_watchers",
          "description": "List watchers"
        },
        {
          "name": "add_watcher",
          "description": "Adds a watcher to the specified work package. The request is expected to contain a single JSON object, that contains a link object under the user key. The response will be user added as watcher. In case the user was already watching the work package an HTTP 200 is returned, an HTTP 201 if the user was added as a new watcher."
        },
        {
          "name": "remove_watcher",
          "description": "Removes the specified user from the list of watchers for the given work package. If the request succeeds, the specified user is not watching the work package anymore. Note This might also be the case, if the specified user did not watch the work package prior to the request."
        }
      ]
    },
    {
      "name": "Types",
      "tools": [
        {
          "name": "list_types_available_in_a_project",
          "description": "This endpoint lists the types that are available in a given project."
        },
        {
          "name": "list_all_types",
          "description": "List all Types"
        },
        {
          "name": "view_type",
          "description": "View Type"
        }
      ]
    },
    {
      "name": "Versions",
      "tools": [
        {
          "name": "list_versions_available_in_a_project",
          "description": "This endpoint lists the versions that are available in a given project. Note that due to sharing this might be more than the versions defined by that project."
        },
        {
          "name": "list_versions",
          "description": "Returns a collection of versions. The client can choose to filter the versions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain versions, for which the requesting client has sufficient permissions viewworkpackages."
        },
        {
          "name": "create_version",
          "description": "Creates a new version applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint. You can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation."
        },
        {
          "name": "available_projects_for_versions",
          "description": "Gets a list of projects in which a version can be created in. The list contains all projects in which the user issuing the request has the manage versions permissions."
        },
        {
          "name": "version_create_form",
          "description": "Version create form"
        },
        {
          "name": "view_version_schema",
          "description": "View version schema"
        },
        {
          "name": "view_version",
          "description": "View version"
        },
        {
          "name": "update_version",
          "description": "Updates the given version by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint."
        },
        {
          "name": "delete_version",
          "description": "Deletes the version. Work packages associated to the version will no longer be assigned to it."
        },
        {
          "name": "version_update_form",
          "description": "Version update form"
        }
      ]
    },
    {
      "name": "Query Columns",
      "tools": [
        {
          "name": "view_query_column",
          "description": "Retrieve an individual QueryColumn as identified by the id parameter."
        }
      ]
    },
    {
      "name": "Query Filters",
      "tools": [
        {
          "name": "view_query_filter",
          "description": "Retrieve an individual QueryFilter as identified by the id parameter."
        }
      ]
    },
    {
      "name": "Query Operators",
      "tools": [
        {
          "name": "view_query_operator",
          "description": "Retrieve an individual QueryOperator as identified by the id parameter."
        }
      ]
    },
    {
      "name": "Query Sort Bys",
      "tools": [
        {
          "name": "view_query_sort_by",
          "description": "Retrieve an individual QuerySortBy as identified by the id parameter."
        }
      ]
    },
    {
      "name": "Relations",
      "tools": [
        {
          "name": "list_relations",
          "description": "Lists all relations according to the given optional, logically conjunctive filters and ordered by ID. The response only includes relations between work packages which the user is allowed to see."
        },
        {
          "name": "get_relation",
          "description": "Get a single relation specified by its unique identifier."
        },
        {
          "name": "update_relation",
          "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body. It is only allowed to provide properties or links supporting the write operation. Note that changing the type of a relation invariably also changes the respective reverseType as well as the \\\"name\\\" of it. The returned Relation object will reflect that change. For instance if you change a Relation's type to \\\"follows\\\" then the reverseType will be changed to precedes. It is not allowed to change a relation's involved work packages."
        },
        {
          "name": "delete_relation",
          "description": "Deletes the relation."
        },
        {
          "name": "create_relation",
          "description": "Create a work package relation on the given work package. A successful creation will result in a relation between two work packages, thus appearing on both involved work package resources."
        }
      ]
    },
    {
      "name": "Previewing",
      "tools": [
        {
          "name": "preview_markdown_document",
          "description": "Preview Markdown document"
        },
        {
          "name": "preview_plain_document",
          "description": "Preview plain document"
        }
      ]
    },
    {
      "name": "Revisions",
      "tools": [
        {
          "name": "view_revision",
          "description": "View revision"
        }
      ]
    },
    {
      "name": "Roles",
      "tools": [
        {
          "name": "list_roles",
          "description": "List all defined roles. This includes built in roles like 'Anonymous' and 'Non member'."
        },
        {
          "name": "view_role",
          "description": "Fetch an individual role."
        }
      ]
    },
    {
      "name": "Statuses",
      "tools": [
        {
          "name": "list_statuses",
          "description": "Returns a collection of all work package statuses."
        },
        {
          "name": "get_status",
          "description": "Returns a work package status by its unique identifier."
        }
      ]
    },
    {
      "name": "Time entries",
      "tools": [
        {
          "name": "list_time_entries",
          "description": "Lists time entries. The time entries returned depend on the filters provided and also on the permission of the requesting user."
        },
        {
          "name": "create_time_entry",
          "description": "Creates a new time entry applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint."
        },
        {
          "name": "time_entry_update_form",
          "description": "Time entry update form"
        },
        {
          "name": "available_projects_for_time_entries",
          "description": "Gets a list of projects in which a time entry can be created in or be assigned to on update. The list contains all projects in which the user issuing the request has the necessary permissions."
        },
        {
          "name": "time_entry_create_form",
          "description": "Time entry create form"
        },
        {
          "name": "view_time_entry_schema",
          "description": "View time entry schema"
        },
        {
          "name": "get_time_entry",
          "description": "Retrieves a single time entry identified by the given id."
        },
        {
          "name": "update_time_entry",
          "description": "Updates the given time entry by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint."
        },
        {
          "name": "delete_time_entry",
          "description": "Permanently deletes the specified time entry."
        }
      ]
    },
    {
      "name": "Time entry activities",
      "tools": [
        {
          "name": "get_time_entries_activity",
          "description": "Fetches the time entry activity resource by the given id."
        }
      ]
    },
    {
      "name": "Users",
      "tools": [
        {
          "name": "list_users",
          "description": "Lists users. Only administrators or users with any of the following can access this resource - managemembers - manageuser - shareworkpackages"
        },
        {
          "name": "create_user",
          "description": "Creates a new user. Only administrators and users with manageuser global permission are allowed to do so. When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body. Valid values for status 1 \\\"active\\\" - In this case a password has to be provided in addition to the other attributes. 2 \\\"invited\\\" - In this case nothing but the email address is required. The rest is optional. An invitation will be sent to the user."
        },
        {
          "name": "view_user_schema",
          "description": "The schema response use two exemplary custom fields that extend the schema response. Depending on your instance and custom field configuration, the response will look somewhat different."
        },
        {
          "name": "view_user",
          "description": "View user"
        },
        {
          "name": "update_user",
          "description": "Updates the user's writable attributes. When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body."
        },
        {
          "name": "delete_user",
          "description": "Permanently deletes the specified user account."
        },
        {
          "name": "user_update_form",
          "description": "User update form"
        },
        {
          "name": "lock_user",
          "description": "Lock user"
        },
        {
          "name": "unlock_user",
          "description": "Unlock user"
        }
      ]
    },
    {
      "name": "Values::Property",
      "tools": [
        {
          "name": "view_values_schema",
          "description": "The schema of a Values resource."
        }
      ]
    },
    {
      "name": "Views",
      "tools": [
        {
          "name": "list_views",
          "description": "Returns a collection of Views. The collection can be filtered via query parameters similar to how work packages are filtered."
        },
        {
          "name": "view_view",
          "description": "View view"
        },
        {
          "name": "create_views",
          "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body. The required fields of a View can be found in its schema, which is embedded in the respective form. Note that it is only allowed to provide properties or links supporting the write operation. There are different subtypes of Views e.g. ViewsWorkPackagesTable with each having its own endpoint for creating that subtype e.g.  apiv3viewsworkpackagestable for ViewsWorkPackagesTable  apiv3viewsteamplanner for ViewsTeamPlanner  apiv3viewsworkpackagescalendar for ViewsWorkPackagesCalendar Not yet implemented To get the list of available subtypes and by that the endpoints for creating a subtype, use the    apiv3viewsschemas  endpoint."
        }
      ]
    },
    {
      "name": "Wiki Pages",
      "tools": [
        {
          "name": "view_wiki_page",
          "description": "Retrieve an individual wiki page as identified by the id parameter"
        }
      ]
    },
    {
      "name": "General",
      "tools": [
        {
          "name": "restart_sdk",
          "description": "Restart the SDK with the variables passed as parameters"
        }
      ]
    }
  ]
}
